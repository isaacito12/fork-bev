var sourceData113 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Components\\MotorDriveUnit\\Utility\\MotorDriveUnit_plotEfficiency.m","RawFileContents":["function fig = MotorDriveUnit_plotEfficiency(nvpairs)\r","%% Makes a plot of power conversion efficiency/losses for motor drive unit\r","% This function takes arguments corresponding to block parameters\r","% of the following blocks:\r","%\r","%   - Motor & Drive block, from Simscape Driveline\r","%   - Motor & Drive (System Level) block, from Simscape Electrical\r","%\r","% and makes a plot of electric-to-mechanical power conversion efficiency map\r","% as a function of motor speed and torque.\r","%\r","% You can run this function without arguments,\r","% and it will create a plot using default argument values.\r","%\r","% No that Motor & Drive (System Level) block supports\r","% various ways to accept block parameters, but\r","% this function makes a plot for it assuming the following case:\r","%\r","%   Electrical Torque\r","%     - Parameterized by: Maximum torque and power\r","%   Electrical Losses\r","%     - Parameterize losses by: Single efficiency measurement\r","%\r","% To make an efficiency plot for other cases\r","% in Motor & Drive (System Level) block,\r","% use the \"Plot efficiency map\" link in the block Description.\r","\r","% Copyright 2021-2023 The MathWorks, Inc.\r","\r","arguments\r","  % In road vehicle applications,\r","  % maximum motor speed is determined by vehicle top speed,\r","  % tire rolling radius, and reduction gear ratio. \r","  nvpairs.MaxSpeed_rpm (1,1) double {mustBePositive} = 17000\r","\r","  nvpairs.MaxTorque_Nm (1,1) double {mustBePositive} = 163\r","  nvpairs.MaxPower_kW (1,1) double {mustBePositive} = 53\r","\r","  nvpairs.Efficiency_pct (1,1) double {mustBePositive} = 95\r","  nvpairs.Speed_measured_rpm (1,1) double {mustBeNonnegative} = 2000\r","  nvpairs.Torque_measured_Nm (1,1) double {mustBeNonnegative} = 50\r","\r","  % In Motor & Drive block from Simscape Driveline,\r","  % iron loss, constant electrical loss, and rotor friction are not modelled,\r","  % i.e., they are 0. \r","  nvpairs.IronToNominalLossRatio_pct (1,1) double {mustBeNonnegative} = 0.1\r","  nvpairs.FixedLoss_W (1,1) double {mustBeNonnegative} = 40\r","  nvpairs.RotorDamping_Nm_per_radps (1,1) double {mustBeNonnegative} = 0.05\r","\r","  % Contour levels need 3 or more points for lower bound, upper bound,\r","  % and one or more points in between.\r","  nvpairs.ContourLevels_pct (1,:) double {mustBeNonnegative} = [1 60 80 90 92 94 96 97 98 99]\r","\r","  nvpairs.PlotResolution (1,1) {mustBeInteger, mustBePositive} = 500\r","end\r","\r","trq_max_Nm = nvpairs.MaxTorque_Nm;\r","\r","spd_max_rpm = nvpairs.MaxSpeed_rpm;\r","\r","power_max_W = 1000* nvpairs.MaxPower_kW;\r","\r","eff_norm = nvpairs.Efficiency_pct/100;\r","\r","spd_eff_rpm = nvpairs.Speed_measured_rpm;\r","\r","trq_eff_Nm = nvpairs.Torque_measured_Nm;\r","\r","% normalized\r","iron_to_nominal_loss_ratio = nvpairs.IronToNominalLossRatio_pct / 100;\r","\r","loss_const_W = nvpairs.FixedLoss_W;\r","\r","k_damp = nvpairs.RotorDamping_Nm_per_radps;\r","\r","contour_levels = nvpairs.ContourLevels_pct;\r","assert(numel(contour_levels) > 2, ...\r","  \"Contour levels need 3 or more elements, but \" ...\r","  + \"it has only \" + numel(contour_levels) + \" levels.\")\r","\r","plotResolution = nvpairs.PlotResolution;\r","\r","%% Derived parameters\r","\r","spd_eff_radps = spd_eff_rpm*2*pi/60;\r","\r","% Mechanical power at efficiency measurement point\r","mechpow_eff = spd_eff_radps * trq_eff_Nm;\r","\r","% Nominal loss (total loss at efficiency measurement point\r","nominal_loss_eff = (1/eff_norm - 1) * mechpow_eff;\r","\r","% Iron loss at efficiency measurement point\r","iron_loss_eff = iron_to_nominal_loss_ratio * nominal_loss_eff;\r","\r","% Copper loss at efficiency measurement point\r","copper_loss_eff = nominal_loss_eff - iron_loss_eff;\r","\r","% Copper loss coefficient for copper loss model\r","k_copper = copper_loss_eff/trq_eff_Nm^2;\r","\r","% Iron loss coefficient for iron loss model\r","k_iron = iron_loss_eff/spd_eff_radps^2;\r","\r","%% Plot\r","\r","% x-axis ... speed\r","w_rpm_vec = linspace(1, spd_max_rpm, plotResolution);\r","w_radps_vec = w_rpm_vec/60*2*pi;  % rad/s\r","\r","% y-axis ... torque\r","trq_Nm_vec = linspace(0, trq_max_Nm, plotResolution)';\r","\r","trq_max_envelope = min(power_max_W ./ w_radps_vec, trq_max_Nm);\r","\r","% Calculation below is done in x-y mesh.\r","[w, trq] = meshgrid(w_radps_vec, trq_Nm_vec);\r","\r","% A mask matrix with 1 for valid, 0 for invalid regions.\r","% This is later multiplied to the efficiency matrix\r","% to set regions over the maximum power to 0.\r","valid_region_mat = trq < trq_max_envelope;\r","\r","% Fixed electrical loss\r","Pb = loss_const_W*ones(plotResolution, plotResolution);\r","\r","kc = k_copper;  % Copper loss coefficient\r","ki = k_iron;  % Iron loss coefficient\r","kd = k_damp;  % Rotor friction coefficient\r","\r","trq_elec = abs(trq) - kd*w;  % Steady state\r","Lc = kc*trq_elec.^2;  % Copper loss model\r","Li = ki*w.^2;  % Iron loss model\r","L_elec = Pb + Lc + Li;  % Total electrical loss\r","mech_power = trq.*w;  % Mechanical power\r","eff = 100 * abs(mech_power) ./(L_elec + abs(mech_power));  % Efficiency in percent\r","\r","% Apply mask\r","eff = valid_region_mat .* eff;\r","\r","fig = figure;  hold on\r","contourf(w_rpm_vec, trq_Nm_vec, eff, contour_levels, ShowText=\"on\")\r","plot(w_rpm_vec, trq_max_envelope, LineWidth=3, Color=\"blue\")\r","sct = scatter(spd_eff_rpm, trq_eff_Nm, \"x\");\r","sct.Marker = \"x\";\r","sct.LineWidth = 1;\r","sct.SizeData = 100;\r","sct.MarkerEdgeColor = \"black\";\r","xlim([0 spd_max_rpm])\r","ylim([0 trq_max_Nm])\r","xlabel(\"Speed (rpm)\")\r","ylabel(\"Torque (Nm)\")\r","title(\"Overall Efficiency of Motor Drive Unit (%)\")\r","\r","end\r",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},"Statement":[{"LineNumber":34,"Hits":[4,1],"StartColumnNumbers":[37,55],"EndColumnNumbers":[51,60],"ContinuedLine":false},{"LineNumber":36,"Hits":[4,1],"StartColumnNumbers":[37,55],"EndColumnNumbers":[51,58],"ContinuedLine":false},{"LineNumber":37,"Hits":[4,1],"StartColumnNumbers":[36,54],"EndColumnNumbers":[50,56],"ContinuedLine":false},{"LineNumber":39,"Hits":[4,1],"StartColumnNumbers":[39,57],"EndColumnNumbers":[53,59],"ContinuedLine":false},{"LineNumber":40,"Hits":[4,1],"StartColumnNumbers":[43,64],"EndColumnNumbers":[60,68],"ContinuedLine":false},{"LineNumber":41,"Hits":[4,1],"StartColumnNumbers":[43,64],"EndColumnNumbers":[60,66],"ContinuedLine":false},{"LineNumber":46,"Hits":[4,1],"StartColumnNumbers":[51,72],"EndColumnNumbers":[68,75],"ContinuedLine":false},{"LineNumber":47,"Hits":[4,1],"StartColumnNumbers":[36,57],"EndColumnNumbers":[53,59],"ContinuedLine":false},{"LineNumber":48,"Hits":[4,1],"StartColumnNumbers":[50,71],"EndColumnNumbers":[67,75],"ContinuedLine":false},{"LineNumber":52,"Hits":[4,1],"StartColumnNumbers":[42,63],"EndColumnNumbers":[59,93],"ContinuedLine":false},{"LineNumber":54,"Hits":[4,4,1],"StartColumnNumbers":[32,47,65],"EndColumnNumbers":[45,61,68],"ContinuedLine":false},{"LineNumber":57,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":59,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":61,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":63,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":65,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":67,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":70,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":72,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":74,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":76,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":77,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":78,"Hits":4,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":true},{"LineNumber":79,"Hits":4,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":true},{"LineNumber":81,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":85,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":88,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":91,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":94,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":97,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":100,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":103,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":108,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":109,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":112,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":114,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":117,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":122,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":125,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":127,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":128,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":129,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":131,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":132,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":133,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":134,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":135,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":136,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":139,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":141,"Hits":[4,4],"StartColumnNumbers":[0,15],"EndColumnNumbers":[13,24],"ContinuedLine":false},{"LineNumber":142,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":143,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":144,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":145,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":146,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":147,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":148,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":149,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":150,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":151,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":152,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":153,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":51,"ContinuedLine":false}]}}