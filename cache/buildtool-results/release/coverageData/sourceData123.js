var sourceData123 = {"FileName":"C:\\local\\mw\\gh-isaacito12-bev\\Components\\MotorDriveUnit\\Utility\\MotorDriveUnit_getBlockInfo_Basic.m","RawFileContents":["function info = MotorDriveUnit_getBlockInfo_Basic(fullpathToBlock, nvpairs)","%% Collects block parameter values from Motor & Drive block","%","% OVERVIEW","%","% This function takes full block path to the Motor & Drive block from","% Simscape Driveline, reads block parameters, and returns them in a struct.","% First load or open a Simulink model containing the Motor & Drive block,","% and pass the full block path of the block to this function.","%","% Calling this function with no argument uses the currently selected block","% in Simulink model file. Open Simulink model, select the Motor & Drive block,","% and run this function to collect information.","%","% ADDITINAL DATA","%","% In addition to reading parameters from Motor & Drive block,","% this function calculates and returns additional data","% (mechanical power, copper loss, iron loss, and nominal loss)","% at efficiency measurement point.","%","% By default, data are computed by assuming that","% the ratio of iron loss to nominal loss","% at efficiency measurement speed is 10 percent.","% You can specify the ratio (in percent) by passing a value to this function","% and get the corresponding data.","%","% The absolute value of iron loss can be used as","% \"Iron losses at measurement speed\" parameter of","% Motor & Drive (System Level) block in Simscape Electrical.","","% Copyright 2021-2023 The MathWorks, Inc.","","arguments","  fullpathToBlock {mustBeText} = gcb","  nvpairs.IronToNominalLossRatio_pct (1,1) double {mustBeNonnegative} = 10;","end","","% ================","% Block parameters","","% Maximum torque","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"torque_max\");","maxTorque_Nm = value(sv, \"N*m\");","info.MaxTorque_Nm = maxTorque_Nm;","","% Maximum power","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"power_max\");","maxPower_kW = value(sv, \"kW\");","info.MaxPower_kW = maxPower_kW;","","% Torque control time constant, Tc","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"Tc\");","info.ResponseTime_s = value(sv, \"s\");","","% Motor and driver overall efficiency (percent)","% No unit is associated to this block parameter.","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"eff\");","% Get the value by specifying \"1\" for unit.","eff_pct = value(sv, \"1\");","info.Efficiency_pct = eff_pct;","eff_norm = eff_pct / 100;","","% Speed at which efficiency is measured","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"w_eff\");","spd_meas_rpm = value(sv, \"rpm\");","info.Speed_measured_rpm = spd_meas_rpm;","spd_meas_radps = spd_meas_rpm*2*pi/60;","","% Torque at which efficiency is measured","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"T_eff\");","trq_meas_Nm = value(sv, \"N*m\");","info.Torque_measured_Nm = trq_meas_Nm;","","%{","% Thermal port","info.thermal = getPar(\"thermal_port\");","","if info.thermal == simscape.enum.thermaleffects.model","  sv = sscVal(\"temperature\");","  info.Initial_Temperature_K = value(sv, \"K\");","end","%}","","% ===============","% Additional data","","% Mechanical power at efficiency measurement point","mechpow_eff = spd_meas_radps * trq_meas_Nm;","mechpow_meas_kW = mechpow_eff / 1000;","info.MechanicalPower_measurement_kW = mechpow_meas_kW;","assert( mechpow_meas_kW < maxPower_kW, ...","  \"Power at efficiency measurement speed must be smaller than maximum power.\")","","% Nominal loss (total loss) at efficiency measurement point","nominal_loss_meas_W = (1/eff_norm - 1) * mechpow_eff;","info.NominalLoss_measured_W = nominal_loss_meas_W;","","iron_to_nominal_loss_ratio = nvpairs.IronToNominalLossRatio_pct / 100;","% Iron losses at measurement speed, Piron","iron_loss_meas_W = iron_to_nominal_loss_ratio * nominal_loss_meas_W;","info.IronLoss_measured_W = iron_loss_meas_W;","","% Copper loss at efficiency measurement point","copper_loss_meas_W = nominal_loss_meas_W - iron_loss_meas_W;","info.CopperLoss_measured_W = copper_loss_meas_W;","","end  % function",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":75,"ContinuedLine":false},"Statement":[{"LineNumber":35,"Hits":[2,1],"StartColumnNumbers":[19,33],"EndColumnNumbers":[29,36],"ContinuedLine":false},{"LineNumber":36,"Hits":[2,2],"StartColumnNumbers":[51,72],"EndColumnNumbers":[68,74],"ContinuedLine":false},{"LineNumber":43,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":44,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":45,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":48,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":49,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":50,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":53,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":54,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":58,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":60,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":61,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":62,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":65,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":66,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":67,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":68,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":71,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":72,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":73,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":89,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":90,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":91,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":92,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":93,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":78,"ContinuedLine":true},{"LineNumber":96,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":97,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":99,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":101,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":102,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":105,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":106,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false}]}}