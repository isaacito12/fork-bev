var sourceData176 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Utility\\LocalTasks\\screenshotSimulink.m","RawFileContents":["function result = screenshotSimulink(nvpairs)\r","%% Saves the screenshot of a Simulink model to an image file.\r","%\r","% The simplest way to use this function is to pass the Simulink model name.\r","% This saves a screenshot image in PNG format in the current folder.\r","%   result = screenshotSimulink(SimulinkModelName=\"ssc_dcmotor\");\r","% Returned data is a struct containing the file name\r","% of a produced screenshot image as well as the width and height of it.\r","%\r","% You can use options to control the size of the image file,\r","% subsystem to take a screenshot, and so on.\r","% For details, see the arguments block below.\r","\r","% Copyright 2021-2023 The MathWorks, Inc.\r","\r","arguments\r","\r","  % The name of the model you want to take a screenshot.\r","  % By default, the screenshot is taken for the top layer.\r","  % To take the screenshot of a subsystem, use SubsystemPath option.\r","  nvpairs.SimulinkModelName {mustBeTextScalar}\r","\r","  % Path to the subsystem to take screenshot,\r","  % for example, SubsystemPath=\"/Subsystem1\".\r","  % Default is an empty string \"\", and the top layer is the target.\r","  nvpairs.SubsystemPath {mustBeTextScalar} = \"\"\r","\r","  % Screenshot file is saved as a PNG file.\r","  % Default file name of the screenshot is \"image_<SimulinkModelName>.png\".\r","  % To specify the image file name, use OutputFileName option.\r","  % The file name is passed to imwrite function.\r","  nvpairs.OutputFileName {mustBeTextScalar}\r","\r","  % Folder path to save image file.\r","  % If this is empty, image file is saved in the current folder.\r","  nvpairs.SaveFolder {mustBeTextScalar} = \"\"\r","\r","  % Width and height of the image file to produce.\r","  nvpairs.OutputImageWidth_px (1,1) {mustBeInteger, mustBeNonnegative} = 0\r","  nvpairs.OutputImageHeight_px (1,1) {mustBeInteger, mustBeNonnegative} = 0\r","\r","  % You can add a padding around the model image.\r","  % The screenshot size is adjusted and centered.\r","  nvpairs.PaddingHorizontal_px (1,1) {mustBeInteger, mustBeNonnegative} = 0\r","  nvpairs.PaddingVertical_px (1,1) {mustBeInteger, mustBeNonnegative} = 0\r","  % [0 0 0] is black. [1 1 1] is white.\r","  nvpairs.PaddingColorRGB (1,3) {mustBeInRange(nvpairs.PaddingColorRGB, 0, 1)} = [1,1,1]\r","\r","  % Options below are for test purposes.\r","\r","  % To test this function without using a Simulink model to take screenshot,\r","  % set StandaloneTest to true.\r","  % If this is true, SimulinkModelName is ignored.\r","  nvpairs.StandaloneTest (1,1) logical = false\r","\r","  % This is for test purpose.\r","  nvpairs.DoNotSaveImageFile (1,1) logical = false\r","\r","end\r","\r","standaloneTest = nvpairs.StandaloneTest;\r","\r","if isfield(nvpairs, 'SimulinkModelName')\r","  modelName = nvpairs.SimulinkModelName;\r","else\r","  modelName = \"\";\r","end\r","result.SimulinkModelName = modelName;\r","\r","if isfield(nvpairs, 'OutputFileName')\r","  outputFileName = nvpairs.OutputFileName;\r","else\r","  if modelName == \"\"\r","    outputFileName = \"Unspecified.png\";\r","  else\r","    outputFileName = \"image_\" + modelName + \".png\";\r","  end\r","end\r","result.OutputFileName = outputFileName;\r","\r","outputFullPath = fullfile(nvpairs.SaveFolder, outputFileName);\r","result.OutputFullPath = outputFullPath;\r","\r","subsystemPath = nvpairs.SubsystemPath;\r","if subsystemPath ~= \"\"\r","  if not(startsWith(subsystemPath, \"/\"))\r","    subsystemPath = \"/\" + subsystemPath;\r","  end\r","end\r","\r","% The values of these variables can be 0 at this point.\r","% They are fully determined later.\r","rows_final = nvpairs.OutputImageHeight_px;\r","cols_final = nvpairs.OutputImageWidth_px;\r","\r","padX = nvpairs.PaddingHorizontal_px;\r","padY = nvpairs.PaddingVertical_px;\r","padRGB = 256 * nvpairs.PaddingColorRGB;\r","\r","if standaloneTest\r","  rows = 600;\r","  cols = 800;\r","  screenshotImage = uint8( 255*ones(rows, cols, 3) );  % 0 - 255\r","  screenshotImage(:,:,1) = screenshotImage(:,:,1)*0.1;  % Red\r","  screenshotImage(:,:,2) = screenshotImage(:,:,2)*0.4;  % Green\r","  screenshotImage(:,:,3) = screenshotImage(:,:,3)*0.1;  % Blue\r","else\r","  if not(bdIsLoaded(modelName))\r","    load_system(modelName)\r","  end\r","  subsystemFullPath = modelName + subsystemPath;\r","  listOfBlocks = getfullname(Simulink.findBlocks(modelName));\r","  tf = contains(listOfBlocks, subsystemFullPath);\r","  if not(any(tf))\r","    error(\"Specified subsystem does not exist: \" + subsystemFullPath)\r","  end\r","  % Take screenshot. It is saved in a file.\r","  print(\"-s\" + subsystemFullPath, ...\r","        \"-dpng\", outputFullPath)\r","  screenshotImage = imread(outputFullPath);\r","end\r","\r","rows_orig = height(screenshotImage);\r","cols_orig = width(screenshotImage);\r","result.OriginalImageWidth = cols_orig;\r","result.OriginalImageHeight = rows_orig;\r","\r","if rows_final == 0 && cols_final > 0\r","  rows_final = ceil(rows_orig * cols_final/cols_orig);\r","elseif rows_final > 0 && cols_final == 0\r","  cols_final = ceil(cols_orig * rows_final/rows_orig);\r","elseif rows_final > 0 && cols_final > 0\r","  % do nothing.\r","else\r","  rows_final = rows_orig;\r","  cols_final = cols_orig;\r","end\r","result.FinalImageWidth = cols_final;\r","result.FinalImageHeight = rows_final;\r","\r","% Compute target size to resize the original image.\r","rows_target = rows_final - padY*2;\r","cols_target = cols_final - padX*2;\r","\r","assert(rows_target > 0, \"Invalid image height %d\", rows_target)\r","assert(cols_target > 0, \"Invalid image width %d\", cols_target)\r","\r","result.ResizedImageWidth = cols_target;\r","result.ResizedImageHeight = rows_target;\r","\r","if padX==0 && padY==0 && rows_final==rows_orig && cols_final==cols_orig\r","  resultImg = screenshotImage;\r","else\r","  resizedImage = imresize(screenshotImage, [rows_target, cols_target]);\r","\r","  % uint8 is necessary to manipulate data as PNG.\r","  resultImg = uint8( ones(rows_final, cols_final, 3) );\r","  resultImg(:,:,1) = padRGB(1)*resultImg(:,:,1);\r","  resultImg(:,:,2) = padRGB(2)*resultImg(:,:,2);\r","  resultImg(:,:,3) = padRGB(3)*resultImg(:,:,3);\r","\r","  % Superimpose the screenshot on top of the rectangle.\r","  % Screenshot is placed at the center.\r","  resultImg( padY+(1:height(resizedImage)) , padX+(1:width(resizedImage)) , : ) = resizedImage;\r","end\r","\r","if nvpairs.DoNotSaveImageFile\r","  disp(\"Not saving screenshot image to a file.\")\r","  % print() created a file unless Standalone option is used.\r","  if isfile(outputFullPath)\r","    delete(outputFullPath)\r","  end\r","else\r","  imwrite(resultImg, outputFullPath)\r","end\r","\r","end  % function\r",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},"Statement":[{"LineNumber":21,"Hits":0,"StartColumnNumbers":29,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":26,"Hits":[0,0],"StartColumnNumbers":[25,45],"EndColumnNumbers":[41,47],"ContinuedLine":false},{"LineNumber":32,"Hits":0,"StartColumnNumbers":26,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":36,"Hits":[0,0],"StartColumnNumbers":[22,42],"EndColumnNumbers":[38,44],"ContinuedLine":false},{"LineNumber":39,"Hits":[0,0,0],"StartColumnNumbers":[37,52,73],"EndColumnNumbers":[50,69,74],"ContinuedLine":false},{"LineNumber":40,"Hits":[0,0,0],"StartColumnNumbers":[38,53,74],"EndColumnNumbers":[51,70,75],"ContinuedLine":false},{"LineNumber":44,"Hits":[0,0,0],"StartColumnNumbers":[38,53,74],"EndColumnNumbers":[51,70,75],"ContinuedLine":false},{"LineNumber":45,"Hits":[0,0,0],"StartColumnNumbers":[36,51,72],"EndColumnNumbers":[49,68,73],"ContinuedLine":false},{"LineNumber":47,"Hits":[0,0],"StartColumnNumbers":[33,81],"EndColumnNumbers":[77,88],"ContinuedLine":false},{"LineNumber":54,"Hits":0,"StartColumnNumbers":41,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":57,"Hits":0,"StartColumnNumbers":45,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":63,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":64,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":66,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":68,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":70,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":71,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":73,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":74,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":76,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":79,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":81,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":82,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":84,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":85,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":86,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":87,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":93,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":94,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":96,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":98,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":100,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":101,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":102,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":103,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":104,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":105,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":108,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":109,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":111,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":112,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":114,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":115,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":118,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":119,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":32,"ContinuedLine":true},{"LineNumber":120,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":123,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":124,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":125,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":129,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":130,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":131,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":132,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":135,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":136,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":138,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":139,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":142,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":143,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":145,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":146,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":148,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":149,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":151,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":152,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":154,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":157,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":158,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":159,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":160,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":164,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":95,"ContinuedLine":false},{"LineNumber":167,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":168,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":170,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":171,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":174,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":36,"ContinuedLine":false}]}}