var sourceData171 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Utility\\Checks\\checkCallbackButton.m","RawFileContents":["function checkCallbackButton(targetModel, fileList)\r","%% Checks ClickFcn callback of Callback Button block\r","% This function finds Callback Button blocks from the target model (1st argument)\r","% and checks the content of its ClickFcn callback.\r","% If ClickFcn contains the `edit` command, check is made such that\r","% filename passed to it exists in the file list (2nd argument).\r","% If ClickFcn does not contain `edit`, ClickFcn is evaluated.\r","%\r","% There is a strong assumption that ClickFcn is extremely simple and short,\r","% especially when `edit` is used.\r","%\r","% Not evaluating `edit` is important because `edit` always errors\r","% if MATLAB is launched with -nodesktop option,\r","% which is the case in Continuous Integration (CI) pipeline,\r","% meaning that CI fails once `edit` is evaluated.\r","% Because of this reason, tests during CI never use `edit`.\r","% However, `edit` is used in some of the callbacks,\r","% and it is important to make sure that it works in interactive uses.\r","%\r","% Callback Button blocks within referenced subsystems included in\r","% the target model are not checked.\r","% To check those blocks, pass the referenced subsystem directly to this function.\r","\r","% Copyright 2023 The MathWorks, Inc.\r","\r","arguments\r","  targetModel (1,:) {mustBeText} = \"\"\r","  fileList (:,1) {mustBeText} = \"\"\r","end\r","\r","% Find Callback Button blocks.\r","pathToCallbackButtons = string(getfullname(Simulink.findBlocksOfType(targetModel, \"CallbackButton\")));\r","numButtons = numel(pathToCallbackButtons);\r","\r","if numButtons == 0\r","  return  % <======================================================= RETURN\r","end\r","\r","disp(\">>>>>> Checking: \" + targetModel)\r","\r","if numButtons >= 2\r","  disp(\"Found \" + numButtons + \" Callback Button block:\")\r","else\r","  disp(\"Found \" + numButtons + \" Callback Button blocks:\")\r","end\r","disp(pathToCallbackButtons)\r","disp(\" \")\r","\r","% Find referenced subsystems.\r","find_opts = Simulink.FindOptions(RegExp = true);\r","refsubs = Simulink.findBlocksOfType(bdroot, \"SubSystem\", \"ReferencedSubsystem\", \".\", find_opts);\r","refsubs = string(getfullname(refsubs));\r","\r","disp(\"Found referenced subsystem(s):\")\r","disp(refsubs)\r","disp(\" \")\r","\r","% For each discovered block, check code in ClickFcn callback.\r","for idx = 1 : numButtons\r","  disp(newline + \">>> \" + idx + \": \" + pathToCallbackButtons(idx))\r","\r","  % Path to target block\r","  blkPath = pathToCallbackButtons(idx);\r","\r","  if startsWith(blkPath, refsubs)\r","    disp(\"Skipping because the block is under referenced subsystem.\")\r","    continue  % <================================================= CONTINUE\r","  end\r","\r","  % Get the code to test.\r","  codeStr = get_param(blkPath, \"ClickFcn\");\r","\r","  % If `edit` is used in the code string, the string is not evaluated.\r","  % Instead, the file being passed to `edit` is checked its existence.\r","  % This is based on the assumption that\r","  % if edit is found, the code string only contains one line for edit.\r","\r","  pattern_has_edit = letterBoundary + \"edit\" + letterBoundary;\r","\r","  pattern_has_openREADME = \"_openREADME\" + letterBoundary;\r","\r","  if contains(codeStr, pattern_has_edit)\r","    disp(\"Found `edit` in ClickFcn. Check that the file passed to `edit` exists in the file list.\")\r","\r","    % Attempt to get the filename passed to edit.\r","    % Pattern matching logic here is kept intentionally simple.\r","    % The check succeeds only if the line containing edit is\r","    % straightforward, like edit(\"foo.m\").\r","\r","    % edit can be command form or function form.\r","    %   edit foo\r","    %   edit(\"foo\")\r","    %   edit('foo.m')\r","    filename = string(strip(extractAfter(codeStr, pattern_has_edit)));\r","    if startsWith(filename, \"(\" + (\"\"\"\"|\"'\")) && endsWith(filename, (\"\"\"\"|\"'\") + \")\")\r","      % Get foo.m from (\"foo.m\") or ('foo.m')\r","      filename = extractBetween(filename, \"(\"+(\"\"\"\"|\"'\"), (\"\"\"\"|\"'\")+\")\");\r","    end\r","\r","    disp(\"Filename passed to edit: \" + filename)\r","\r","    found = true;\r","    if endsWith(filename, [\".m\", \".mlx\"])\r","      lix = endsWith(fileList, filename);  % logical index\r","      if all(lix == 0)\r","        found = false;\r","        warning(\"File not found: \" + filename)\r","      end\r","    else\r","      lix = endsWith(fileList, [filename+\".m\", filename+\".mlx\"]);\r","      if all(lix == 0)\r","        found = false;\r","        warning(\"File not found: \" + filename+\".m, \" + filename+\".mlx\")\r","      end\r","    end\r","\r","    if found\r","      assert(nnz(lix) == 1, ...\r","        \"Only one file should be found, but two or more files were found: \" ...\r","        + join(fileList(lix), \", \"))\r","      fullPathToFile = fileList(lix);\r","      disp(\"Found: \" + fullPathToFile)\r","    end\r","\r","  elseif contains(codeStr, pattern_has_openREADME)\r","    disp(\"Found openREADME function in ClickFcn. Check that the README.md file exists in the file list.\")\r","\r","    fcnName = string(strip(codeStr));\r","    eval(fcnName + \"(TestRun=true)\")\r","  else\r","    % If `edit` is not found in the ClickFcn code string, evaluate it.\r","    disp(\"  >>> Evaluating ClickFcn. This must finish without warning or error.\")\r","    eval(codeStr)\r","    disp(\"  <<< done.\")\r","\r","  end  % if\r","end  % for\r","\r","end  % function\r",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":51,"ContinuedLine":false},"Statement":[{"LineNumber":27,"Hits":[4,0],"StartColumnNumbers":[21,35],"EndColumnNumbers":[31,37],"ContinuedLine":false},{"LineNumber":28,"Hits":[4,0],"StartColumnNumbers":[18,32],"EndColumnNumbers":[28,34],"ContinuedLine":false},{"LineNumber":32,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":102,"ContinuedLine":false},{"LineNumber":33,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":35,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":36,"Hits":1,"StartColumnNumbers":2,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":39,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":41,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":42,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":44,"Hits":1,"StartColumnNumbers":2,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":46,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":47,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":50,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":51,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":96,"ContinuedLine":false},{"LineNumber":52,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":54,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":55,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":56,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":59,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":60,"Hits":6,"StartColumnNumbers":2,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":63,"Hits":6,"StartColumnNumbers":2,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":65,"Hits":6,"StartColumnNumbers":2,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":66,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":67,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":71,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":78,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":80,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":82,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":83,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":99,"ContinuedLine":false},{"LineNumber":94,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":95,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":97,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":100,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":102,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":103,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":104,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":105,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":106,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":107,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":110,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":111,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":112,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":113,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":117,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":118,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":119,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":75,"ContinuedLine":true},{"LineNumber":120,"Hits":0,"StartColumnNumbers":8,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":121,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":122,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":125,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":126,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":105,"ContinuedLine":false},{"LineNumber":128,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":129,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":132,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":133,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":134,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false}]}}