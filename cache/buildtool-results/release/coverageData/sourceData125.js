var sourceData125 = {"FileName":"C:\\local\\mw\\gh-isaacito12-bev\\Components\\MotorDriveUnit\\Utility\\MotorDriveUnit_plotEfficiency.m","RawFileContents":["function fig = MotorDriveUnit_plotEfficiency(nvpairs)","%% Makes a plot of power conversion efficiency/losses for motor drive unit","% This function takes arguments corresponding to block parameters","% of the following blocks:","%","%   - Motor & Drive block, from Simscape Driveline","%   - Motor & Drive (System Level) block, from Simscape Electrical","%","% and makes a plot of electric-to-mechanical power conversion efficiency map","% as a function of motor speed and torque.","%","% You can run this function without arguments,","% and it will create a plot using default argument values.","%","% No that Motor & Drive (System Level) block supports","% various ways to accept block parameters, but","% this function makes a plot for it assuming the following case:","%","%   Electrical Torque","%     - Parameterized by: Maximum torque and power","%   Electrical Losses","%     - Parameterize losses by: Single efficiency measurement","%","% To make an efficiency plot for other cases","% in Motor & Drive (System Level) block,","% use the \"Plot efficiency map\" link in the block Description.","","% Copyright 2021-2023 The MathWorks, Inc.","","arguments","  % In road vehicle applications,","  % maximum motor speed is determined by vehicle top speed,","  % tire rolling radius, and reduction gear ratio. ","  nvpairs.MaxSpeed_rpm (1,1) double {mustBePositive} = 17000","","  nvpairs.MaxTorque_Nm (1,1) double {mustBePositive} = 163","  nvpairs.MaxPower_kW (1,1) double {mustBePositive} = 53","","  nvpairs.Efficiency_pct (1,1) double {mustBePositive} = 95","  nvpairs.Speed_measured_rpm (1,1) double {mustBeNonnegative} = 2000","  nvpairs.Torque_measured_Nm (1,1) double {mustBeNonnegative} = 50","","  % In Motor & Drive block from Simscape Driveline,","  % iron loss, constant electrical loss, and rotor friction are not modelled,","  % i.e., they are 0. ","  nvpairs.IronToNominalLossRatio_pct (1,1) double {mustBeNonnegative} = 0.1","  nvpairs.FixedLoss_W (1,1) double {mustBeNonnegative} = 40","  nvpairs.RotorDamping_Nm_per_radps (1,1) double {mustBeNonnegative} = 0.05","","  % Contour levels need 3 or more points for lower bound, upper bound,","  % and one or more points in between.","  nvpairs.ContourLevels_pct (1,:) double {mustBeNonnegative} = [1 60 80 90 92 94 96 97 98 99]","","  nvpairs.PlotResolution (1,1) {mustBeInteger, mustBePositive} = 500","end","","trq_max_Nm = nvpairs.MaxTorque_Nm;","","spd_max_rpm = nvpairs.MaxSpeed_rpm;","","power_max_W = 1000* nvpairs.MaxPower_kW;","","eff_norm = nvpairs.Efficiency_pct/100;","","spd_eff_rpm = nvpairs.Speed_measured_rpm;","","trq_eff_Nm = nvpairs.Torque_measured_Nm;","","% normalized","iron_to_nominal_loss_ratio = nvpairs.IronToNominalLossRatio_pct / 100;","","loss_const_W = nvpairs.FixedLoss_W;","","k_damp = nvpairs.RotorDamping_Nm_per_radps;","","contour_levels = nvpairs.ContourLevels_pct;","assert(numel(contour_levels) > 2, ...","  \"Contour levels need 3 or more elements, but \" ...","  + \"it has only \" + numel(contour_levels) + \" levels.\")","","plotResolution = nvpairs.PlotResolution;","","%% Derived parameters","","spd_eff_radps = spd_eff_rpm*2*pi/60;","","% Mechanical power at efficiency measurement point","mechpow_eff = spd_eff_radps * trq_eff_Nm;","","% Nominal loss (total loss at efficiency measurement point","nominal_loss_eff = (1/eff_norm - 1) * mechpow_eff;","","% Iron loss at efficiency measurement point","iron_loss_eff = iron_to_nominal_loss_ratio * nominal_loss_eff;","","% Copper loss at efficiency measurement point","copper_loss_eff = nominal_loss_eff - iron_loss_eff;","","% Copper loss coefficient for copper loss model","k_copper = copper_loss_eff/trq_eff_Nm^2;","","% Iron loss coefficient for iron loss model","k_iron = iron_loss_eff/spd_eff_radps^2;","","%% Plot","","% x-axis ... speed","w_rpm_vec = linspace(1, spd_max_rpm, plotResolution);","w_radps_vec = w_rpm_vec/60*2*pi;  % rad/s","","% y-axis ... torque","trq_Nm_vec = linspace(0, trq_max_Nm, plotResolution)';","","trq_max_envelope = min(power_max_W ./ w_radps_vec, trq_max_Nm);","","% Calculation below is done in x-y mesh.","[w, trq] = meshgrid(w_radps_vec, trq_Nm_vec);","","% A mask matrix with 1 for valid, 0 for invalid regions.","% This is later multiplied to the efficiency matrix","% to set regions over the maximum power to 0.","valid_region_mat = trq < trq_max_envelope;","","% Fixed electrical loss","Pb = loss_const_W*ones(plotResolution, plotResolution);","","kc = k_copper;  % Copper loss coefficient","ki = k_iron;  % Iron loss coefficient","kd = k_damp;  % Rotor friction coefficient","","trq_elec = abs(trq) - kd*w;  % Steady state","Lc = kc*trq_elec.^2;  % Copper loss model","Li = ki*w.^2;  % Iron loss model","L_elec = Pb + Lc + Li;  % Total electrical loss","mech_power = trq.*w;  % Mechanical power","eff = 100 * abs(mech_power) ./(L_elec + abs(mech_power));  % Efficiency in percent","","% Apply mask","eff = valid_region_mat .* eff;","","fig = figure;  hold on","contourf(w_rpm_vec, trq_Nm_vec, eff, contour_levels, ShowText=\"on\")","plot(w_rpm_vec, trq_max_envelope, LineWidth=3, Color=\"blue\")","sct = scatter(spd_eff_rpm, trq_eff_Nm, \"x\");","sct.Marker = \"x\";","sct.LineWidth = 1;","sct.SizeData = 100;","sct.MarkerEdgeColor = \"black\";","xlim([0 spd_max_rpm])","ylim([0 trq_max_Nm])","xlabel(\"Speed (rpm)\")","ylabel(\"Torque (Nm)\")","title(\"Overall Efficiency of Motor Drive Unit (%)\")","","end",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},"Statement":[{"LineNumber":34,"Hits":[4,1],"StartColumnNumbers":[37,55],"EndColumnNumbers":[51,60],"ContinuedLine":false},{"LineNumber":36,"Hits":[4,1],"StartColumnNumbers":[37,55],"EndColumnNumbers":[51,58],"ContinuedLine":false},{"LineNumber":37,"Hits":[4,1],"StartColumnNumbers":[36,54],"EndColumnNumbers":[50,56],"ContinuedLine":false},{"LineNumber":39,"Hits":[4,1],"StartColumnNumbers":[39,57],"EndColumnNumbers":[53,59],"ContinuedLine":false},{"LineNumber":40,"Hits":[4,1],"StartColumnNumbers":[43,64],"EndColumnNumbers":[60,68],"ContinuedLine":false},{"LineNumber":41,"Hits":[4,1],"StartColumnNumbers":[43,64],"EndColumnNumbers":[60,66],"ContinuedLine":false},{"LineNumber":46,"Hits":[4,1],"StartColumnNumbers":[51,72],"EndColumnNumbers":[68,75],"ContinuedLine":false},{"LineNumber":47,"Hits":[4,1],"StartColumnNumbers":[36,57],"EndColumnNumbers":[53,59],"ContinuedLine":false},{"LineNumber":48,"Hits":[4,1],"StartColumnNumbers":[50,71],"EndColumnNumbers":[67,75],"ContinuedLine":false},{"LineNumber":52,"Hits":[4,1],"StartColumnNumbers":[42,63],"EndColumnNumbers":[59,93],"ContinuedLine":false},{"LineNumber":54,"Hits":[4,4,1],"StartColumnNumbers":[32,47,65],"EndColumnNumbers":[45,61,68],"ContinuedLine":false},{"LineNumber":57,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":59,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":61,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":63,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":65,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":67,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":70,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":72,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":74,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":76,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":77,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":78,"Hits":4,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":true},{"LineNumber":79,"Hits":4,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":true},{"LineNumber":81,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":85,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":88,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":91,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":94,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":97,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":100,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":103,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":108,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":109,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":112,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":114,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":117,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":122,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":125,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":127,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":14,"ContinuedLine":false},{"LineNumber":128,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":129,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":131,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":132,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":133,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":134,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":135,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":136,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":139,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":141,"Hits":[4,4],"StartColumnNumbers":[0,15],"EndColumnNumbers":[13,23],"ContinuedLine":false},{"LineNumber":142,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":143,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":144,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":145,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":146,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":147,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":148,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":149,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":150,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":151,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":152,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":153,"Hits":4,"StartColumnNumbers":0,"EndColumnNumbers":51,"ContinuedLine":false}]}}