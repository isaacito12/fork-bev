var sourceData221 = {"FileName":"C:\\local\\mw\\gh-isaacito12-bev\\Utility\\SignalDesigner\\SignalDesigner.m","RawFileContents":["classdef SignalDesigner < handle","%% Signal Designer class implementation","","% Copyright 2022 The MathWorks, Inc.","","properties","  % Signal specifications","","  Type {mustBeMember(Type, [\"PieceWiseConstant\", \"ContinuousMultiStep\", \"Continuous\"])} = \"PieceWiseConstant\"","","  Title {mustBeTextScalar} = \"\"","  Description {mustBeTextScalar} = \"\"","","  XName {mustBeTextScalar} = \"X\"","  XVarName {mustBeTextScalar} = \"X\"","  XUnit {mustBeTextScalar} = \"1\"","","  YName {mustBeTextScalar} = \"Y\"","  YVarName {mustBeTextScalar} = \"Y\"","  YUnit {mustBeTextScalar} = \"1\"","","  XYData double","","  % For continuous data","  DeltaX (1,1) double {mustBePositive} = 0.1","","  % Properties for saving signal spec","  SpecFilename {mustBeTextScalar} = \"\"","  XSaveFormat {mustBeTextScalar} = \"%0.2f\"","  YSaveFormat {mustBeTextScalar} = \"%0.4f\"","","  % ----- Internally generated properties -----","","  TransformedData table","  Data table","","  % For continous data","  XRefined (:,1) double","  YRefined (:,1) double","  InterpolatedData table","","end  % properties","","methods","%%","","","function sigObj = SignalDesigner(SignalType)","%%","","arguments","  SignalType {mustBeMember(SignalType, [\"PieceWiseConstant\", \"ContinuousMultiStep\", \"Continuous\"])} = \"PieceWiseConstant\"","end","","sigObj.Type = SignalType;","","if sigObj.Type == \"PieceWiseConstant\" || sigObj.Type == \"Continuous\"","  sigObj.XYData = [ 0 0 ; 1 0 ];","else  % ContinuousMultiStep","  sigObj.XYData = [ 0 1 0 ];","end","","update(sigObj);","","end  % function","","","function update(sigObj)","%%","","arguments","  sigObj (1,1) SignalDesigner","end","","switch sigObj.Type","","case \"ContinuousMultiStep\"","","  sigObj.TransformedData = transformDataPoints(sigObj, sigObj.XYData);","  sigObj.InterpolatedData = interpolateDataPoints(sigObj, sigObj.TransformedData);","  sigObj.Data = eliminateRedundantDataPoints(sigObj, sigObj.InterpolatedData);","","case \"PieceWiseConstant\"","","  % Check X data points","  xPoints = sigObj.XYData(:, 1);","  assert( issorted(xPoints, \"strictascend\"), ...","    \"X must be strictly asending.\")","","  % Check Y data points","  yPoints = sigObj.XYData(:, 2);","  assert( all(not(isnan(yPoints))), ...","    \"Y data cannot have NaN.\")","","  % Build data","  newData = table(xPoints, yPoints);","  newData.Properties.VariableNames = [sigObj.XVarName, sigObj.YVarName];","  newData.Properties.VariableUnits = [sigObj.XUnit, sigObj.YUnit];","  sigObj.Data = newData;","","case \"Continuous\"","","  dx = sigObj.DeltaX;","","  % Check X data points","  xPoints = sigObj.XYData(:, 1);","  assert( numel(xPoints) >= 2 , ...","    \"Only one row is defined, but Continuous signal type requires at least 2 rows.\")","  assert( issorted(xPoints, \"strictascend\"), ...","    \"X must be strictly asending.\")","","  % Check that delta x makes sense for interpolation.","  min_diff_x = min(diff(xPoints));","  assert(dx <= min_diff_x/2, ...","    \"Interpolation step size dx must be smaller than or equal to the half of mininum value of diff(X).\" ...","    + newline + \"dx/2 = \" + dx + \" \" ...","    + newline + \"min(diff(x)) = \" + min_diff_x/2 )","","  % Check Y data points","  yPoints = sigObj.XYData(:, 2);","  assert( all(not(isnan(yPoints))), ...","    \"Y data cannot have NaN.\")","","  % Build data","  x_refined = transpose(xPoints(1) : dx : xPoints(end));","  if abs(x_refined(end) - xPoints(end)) > 10*eps","    x_refined(end + 1) = xPoints(end);","  end","  y_refined = interp1(xPoints, yPoints, x_refined, \"makima\");","  sigObj.InterpolatedData = table(x_refined, y_refined);","  sigObj.InterpolatedData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];","  sigObj.InterpolatedData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];","  sigObj.Data = sigObj.InterpolatedData;","  sigObj.XRefined = x_refined;","  sigObj.YRefined = y_refined;","","end  % switch","","end  % function","","","function fig = plotDataPoints(sigObj, nvpairs)","%% Plots generated data points.","","arguments","  sigObj (1,1) SignalDesigner","","  % Debug=true shows intermediate points","  nvpairs.Debug (1,1) logical = false","end","","update(sigObj);","","plotMoreForDebug = nvpairs.Debug;","","fig = figure;","fig.Position(3:4) = [800 400];","hold on","grid on","axis padded","","if sigObj.Title ~= \"\"","  title(sigObj.Title)","end","","switch sigObj.Type","","case \"ContinuousMultiStep\"","","  if plotMoreForDebug","","    % Generated trace","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=1);","","    % Final data points ... interpolated, no redundancy in data points","    sc = scatter(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), 36*3);","    sc.Marker = \"+\";","    sc.LineWidth = 1.5;","","    % Interpolated points","    % There may not exist interpolated data points.","    if height(sigObj.InterpolatedData) >= 1","      sc = scatter(sigObj.InterpolatedData.(sigObj.XVarName), sigObj.InterpolatedData.(sigObj.YVarName), 36*2);","      sc.Marker = \"x\";","      sc.LineWidth = 2;","    end","","    % User data","    lix = sigObj.TransformedData.Added == false;  % logical index","    xTmp = sigObj.TransformedData.X;","    yTmp = sigObj.TransformedData.Y;","    sc = scatter(xTmp(lix), yTmp(lix), 36*4);","    sc.Marker = \"o\";","    sc.LineWidth = 2;","","    if height(sigObj.InterpolatedData) >= 1","      legend([\"Generated trace\", \"Final data points\", \"Interpolated\", \"Data points\"], Location=\"best\")","    else","      legend([\"Generated trace\", \"Final data points\", \"Data points\"], Location=\"best\")","    end","","  else  % not debug","","    % Interpolated points without redundancy","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=2);","","    % User data","    lix = sigObj.TransformedData.Added == false;  % logical index","    xTmp = sigObj.TransformedData.X;","    yTmp = sigObj.TransformedData.Y;","    sc = scatter(xTmp(lix), yTmp(lix), 36*1.5);","    sc.Marker = \"o\";","    sc.LineWidth = 2;","","    legend([\"Generated trace\", \"Data points\"], Location=\"best\")","  end  % if","","case \"PieceWiseConstant\"","","  st = stairs(sigObj.Data, sigObj.XVarName, sigObj.YVarName);","  st.LineWidth = 2;","","  sc = scatter(sigObj.Data, sigObj.XVarName, sigObj.YVarName);","  sc.Marker = \"o\";","  sc.SizeData = 36*2;","  sc.LineWidth = 2;","","  legend([\"Generated trace\", \"Data points\"], Location=\"best\")","","case \"Continuous\"","","  if plotMoreForDebug","","    % Generated trace","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=1);","","    % Interpolated points","    sc = scatter(sigObj.InterpolatedData.(sigObj.XVarName), sigObj.InterpolatedData.(sigObj.YVarName), 36*2);","    sc.Marker = \"x\";","    sc.LineWidth = 2;","","    % User data","    xPoints = sigObj.XYData(:, 1);","    yPoints = sigObj.XYData(:, 2);","    sc = scatter(xPoints, yPoints, 36*1.5);","    sc.Marker = \"o\";","    sc.SizeData = 36*2;","    sc.LineWidth = 2;","","    if height(sigObj.InterpolatedData) >= 1","      legend([\"Generated trace\", \"Interpolated\", \"Data points\"], Location=\"best\")","    else","      legend([\"Generated trace\", \"Data points\"], Location=\"best\")","    end","","  else  % not debug","","    % Generated trace","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=2);","","    % User data","    xPoints = sigObj.XYData(:, 1);","    yPoints = sigObj.XYData(:, 2);","    sc = scatter(xPoints, yPoints, 36*1.5);","    sc.Marker = \"o\";","    sc.LineWidth = 2;","","    legend([\"Generated trace\", \"Data points\"], Location=\"best\")","  end  % if","","","end  % switch","","xLabelStr = sigObj.XName;","if sigObj.Data.Properties.VariableUnits(1) ~= \"1\"","  xLabelStr = xLabelStr + \" (\" + sigObj.Data.Properties.VariableUnits(1) + \")\";","end","xlabel(xLabelStr)","","yLabelStr = sigObj.YName;","if sigObj.Data.Properties.VariableUnits(2) ~= \"1\"","  yLabelStr = yLabelStr + \" (\" + sigObj.Data.Properties.VariableUnits(2) + \")\";","end","ylabel(yLabelStr)","","end  % function","","","function saveSpec(sigObj, SpecFilename)","%% Saves signal specification to JSON file.","","arguments","  sigObj (1,1) SignalDesigner","  SpecFilename {mustBeTextScalar}","end","","% SpecFilename is saved to sigObj. saveData function uses it.","sigObj.SpecFilename = SpecFilename;","","signalSpec = [];","signalSpec.Type = sigObj.Type;","signalSpec.Title = sigObj.Title;","signalSpec.Description = sigObj.Description;","signalSpec.XName = sigObj.XName;","signalSpec.XVarName = sigObj.XVarName;","signalSpec.XUnit = sigObj.XUnit;","signalSpec.YName = sigObj.YName;","signalSpec.YVarName = sigObj.YVarName;","signalSpec.YUnit = sigObj.YUnit;","signalSpec.XSaveFormat = sigObj.XSaveFormat;","signalSpec.YSaveFormat = sigObj.YSaveFormat;","if sigObj.Type == \"ContinuousMultiStep\" || sigObj.Type == \"Continuous\"","  signalSpec.DeltaX = sigObj.DeltaX;","end","signalSpec.XYData = sigObj.XYData;","","jsonStr = string(jsonencode(signalSpec, PrettyPrint=true));","","% The above jsonStr can be saved to file, but","% each element of a row is placed in separate lines","% with many unnecessary white spaces due to the PrettyPrint=true option.","% The code below combine those lines to a more compact yet readable style.","jsonStrFirstPart = extractBefore(jsonStr, newline + whitespacePattern + \"[\" + newline) + newline;","","if sigObj.Type == \"PieceWiseConstant\" || sigObj.Type == \"Continuous\"","  ptn = whitespacePattern + \"[\" + newline ...","    + whitespacePattern + digitsPattern + \",\" + newline ... x","    + whitespacePattern + digitsPattern + newline;   % y","","else  % ContinuousMultiStep","  ptn = whitespacePattern + \"[\" + newline ...","    + whitespacePattern + digitsPattern + \",\" + newline ... x1","    + whitespacePattern + (digitsPattern | caseInsensitivePattern(\"null\")) + \",\" + newline ... x2","    + whitespacePattern + digitsPattern + newline;  % y","","end  % if","","jsonStrDataPoints = extract(jsonStr, ptn);","jsonStrDataPoints = erase(jsonStrDataPoints, [newline whitespacePattern]) + \"],\" + newline;","jsonStrDataPoints(end) = replace(jsonStrDataPoints(end), \"],\", \"]\");","","% join uses a white space as a default delmiter, which","% we don't need, thus specifying \"\" in the second argument.","jsonStrDataPoints = join(jsonStrDataPoints, \"\");","","jsonStr = jsonStrFirstPart + jsonStrDataPoints + \"]}\";","","fid = fopen(SpecFilename, \"w\");","fprintf(fid, \"%s\", jsonStr);","fclose(fid);","","end  % function","","","function specStruct = loadSpec(sigObj, SpecFilename)","%% Reads signal spec file and updates signal object.","","arguments","  sigObj (1,1) SignalDesigner","  SpecFilename {mustBeTextScalar}","end","","jsonStr = fileread(SpecFilename);","","specStruct = jsondecode(jsonStr);","","% JSON supports fewer data types than MATLAB.","% For example, string in MATLAB is saved as charactor vector in JSON","% because there is no string type in JSON.","% thus jsondecode returns charactor vector for texts.","% You must convert them to string explicitly if necessary.","","sigObj.Type = string(specStruct.Type);","sigObj.Title = string(specStruct.Title);","sigObj.Description = string(specStruct.Description);","sigObj.XName = string(specStruct.XName);","sigObj.XVarName = string(specStruct.XVarName);","sigObj.XUnit = string(specStruct.XUnit);","sigObj.YName = string(specStruct.YName);","sigObj.YVarName = string(specStruct.YVarName);","sigObj.YUnit = string(specStruct.YUnit);","sigObj.SpecFilename = string(SpecFilename);","","if sigObj.Type == \"ContinuousMultiStep\" || sigObj.Type == \"Continuous\""," sigObj.DeltaX = specStruct.DeltaX;","end","","end  % function","","","function saveData(sigObj, DataFilename)","%% Saves generated signal data to M file.","","arguments","  sigObj (1,1) SignalDesigner","  DataFilename {mustBeTextScalar}","end","","xDataStr = sprintf(sigObj.XSaveFormat + \" \", sigObj.Data.(sigObj.XVarName));","xDataStr = \"[ \" + xDataStr + \"]\";","","yDataStr = sprintf(sigObj.YSaveFormat + \" \", sigObj.Data.(sigObj.YVarName));","yDataStr = \"[ \" + yDataStr + \"]\";","","dataStr = ...","  \"% \" + sigObj.Description + newline + ...","  \"% X: \" + sigObj.XName + \" (\" + sigObj.XUnit + \")\" + newline + ...","  \"% Y: \" + sigObj.YName + \" (\" + sigObj.YUnit + \")\" + newline + ...","  \"% Spec file: \" + sigObj.SpecFilename + newline + ...","  sigObj.XVarName + \" = \" + xDataStr + \";\" + newline + ...","  sigObj.YVarName + \" = \" + yDataStr + \";\" + newline;","","fid = fopen(DataFilename, \"w\");","fprintf(fid, \"%s\", dataStr);","fclose(fid);","","end  % function","","","function result = transformDataPoints(~, xyData)","%% Transforms compact xy-data points to a format suitable for processing","% Converts a row in [x1 x2 y] format into [x1 y; x2 y] format.","% Optionally adds mid-points for smoothing.","% Works with continuous and timedcontinuous cases.","","arguments","  ~","","  % N-by-3 matrix. Each row is [x1 x2 y].","  % x1 is X start data point.","  % x2 is X end data point, which can be nan.","  % y is Y data point.","  xyData (:,3) double","end","","numInputRows = height(xyData);","","% Check X data points","","xPoints = xyData(:, [1 2]);","","assert(issorted(xPoints(:,1), \"strictascend\"), ...","  \"X start vector must be strictly asending.\")","","tmpVec = xPoints(:,2);","lix = not(isnan(tmpVec));  % logical index","if any(lix)","  tmpVec = tmpVec(lix);","  assert(issorted(tmpVec, \"strictascend\"), ...","    \"X end vector must be strictly asending.\")","","  dx = xPoints(:,2) - xPoints(:,1);","","  cond_dx_is_nan = isnan(dx);","  cond_dx_is_pos = dx > 0;","  violating = not(cond_dx_is_nan | cond_dx_is_pos);","  lix = find(violating);  % logical index","  assert(isempty(lix), ...","    \"X start is after X end, which is invalid, at these rows: \" + num2str(lix'));","","end  % if","","% Check Y data points","","yPoints = xyData(:, 3);","","assert(all( not(isnan( yPoints )) ), ...","  \"Y data cannot have NaN.\")","","% Build data","","% If transformedData.Refine(i) is true,","% apply interpolation to the data between i and i+1.","transformedData = struct('X', [], 'Y',[], 'Added',[], 'Refine',[]);","","idx = 1;","for r = 1 : numInputRows","","  % xp(1) is X start point. Must exist.","  % xp(2) is X end point. May not exist.","  % yp is Y data point. Must exist.","  xp = xPoints(r, :);","  yp = yPoints(r);","","  transformedData(idx).X = xp(1);","  transformedData(idx).Y = yp;","  transformedData(idx).Added = false;","  transformedData(idx).Refine = false;","","  idx = idx + 1;","","  if isnan(xp(2))","    % X end point, xp(2), is not defined.","    % This point is used for interpolation.","","    transformedData(idx-1).Refine = true;","","  else","    % X end point, xp(2), is defined.","    % This point is part of flat segment and not used for interpolation.","","    % Add mid-point.","    transformedData(idx).Added = true;","    transformedData(idx).X = (xp(1) + xp(2)) / 2;","    transformedData(idx).Y = yp;","    transformedData(idx).Refine = false;","","    idx = idx + 1;","","    % Add end point.","    transformedData(idx).Added = false;","    transformedData(idx).X = xp(2);","    transformedData(idx).Y = yp;","    transformedData(idx).Refine = true;","","    idx = idx + 1;","","  end  % if","end  % for","transformedData(end).Refine = false;","","dx = diff([transformedData.X]);","assert(all(dx > 0), \"X data points are not strictly ascending.\")","","result = struct2table(transformedData);","","end  % function","","","function result = interpolateDataPoints(sigObj, transformedData)","%% Interpolates data points.","% This takes transformed data points, not a user-specified matrix.","","arguments","  sigObj (1,1) SignalDesigner","  transformedData (:,4)","end","","x_1 = transformedData.X(1);","x_end = transformedData.X(end);","x_delta = sigObj.DeltaX;","","% Check that delta x makes sense for interpolation.","% This check must be made in interpolating segments only.","indices = find(transformedData.Refine == true);","","if isempty(indices)","  result = table(Size=[0, 2], VariableTypes=[\"double\", \"double\"]);","  return  % <======================================================= RETURN","end","","nextElementIndices = indices + 1;","xPoints = transformedData.X;","dx = xPoints(nextElementIndices) - xPoints(indices);","assert(x_delta <= min(dx)/2, ...","  \"Delta X must be smaller than the half of min(dx) in interpolating segments.\" ...","  + newline + \"Delta X = \" + x_delta + \" \" ...","  + newline + \"min(dx)/2 = \" + min(dx)/2 )","","x_refined = transpose(x_1 : x_delta : x_end);","if abs(x_refined(end) - x_end) > 10*eps","  x_refined(end + 1) = x_end;","end","","y_refined = interp1(transformedData.X, transformedData.Y, x_refined, \"makima\");","","sigObj.XRefined = x_refined;","sigObj.YRefined = y_refined;","","interpolatedData = table(x_refined, y_refined);","interpolatedData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];","interpolatedData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];","","result = interpolatedData;","","end  % function","","","function result = eliminateRedundantDataPoints(sigObj, interpolatedData)","%% Eliminates redundant data points generated by interpolation.","","arguments","  sigObj (1,1) SignalDesigner","  interpolatedData (:,2) table","end","","newData = table(Size=[0, 2], VariableTypes=[\"double\", \"double\"]);","newData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];","newData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];","","idx = 1;","while idx < height(sigObj.TransformedData)","","  if sigObj.TransformedData.Refine(idx) == true","    % Use interpolated points.","    xRange = (sigObj.TransformedData.X(idx) <= sigObj.XRefined) ...","              & (sigObj.XRefined <= sigObj.TransformedData.X(idx+1));","    % Avoid duplicating the same row.","    newData = [newData(1:end-1, :); interpolatedData(xRange, :)];","    idx = idx + 1;","","  else","    % Interpolated points contain redundant points in flat segments.","    % Avoid including those redundant points.","","    % We must skip the internally added mid-point.","    % Thus, idx+2 rather than idx+1 is used.","    tmpData = table( ...","                [sigObj.TransformedData.X(idx); sigObj.TransformedData.X(idx+2)], ...","                [sigObj.TransformedData.Y(idx); sigObj.TransformedData.Y(idx+2)], ...","                VariableNames = [sigObj.XVarName, sigObj.YVarName] );","    tmpData.Properties.VariableUnits = [sigObj.XUnit, sigObj.YUnit];","","    % Avoid duplicating the same row.","    newData = [newData(1:end-1, :); tmpData];","    idx = idx + 2;","","  end","end","","assert(issorted(newData.(sigObj.XVarName), \"strictascend\"))","","result = newData;","","end  % function","","end  % methods","","end  % classdef",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":48,"Hits":699,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":68,"Hits":1590,"StartColumnNumbers":0,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":142,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":289,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":355,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":391,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":420,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":530,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":579,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false}],"Statement":[{"LineNumber":52,"Hits":[699,1],"StartColumnNumbers":[14,102],"EndColumnNumbers":[98,121],"ContinuedLine":false},{"LineNumber":55,"Hits":699,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":57,"Hits":699,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":58,"Hits":144,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":60,"Hits":555,"StartColumnNumbers":2,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":63,"Hits":699,"StartColumnNumbers":0,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":75,"Hits":1590,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":77,"Hits":1590,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":79,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":80,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":82,"ContinuedLine":false},{"LineNumber":81,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":78,"ContinuedLine":false},{"LineNumber":83,"Hits":473,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":86,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":87,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":88,"Hits":103,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":91,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":92,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":93,"Hits":103,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":96,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":97,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":98,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":99,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":101,"Hits":370,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":103,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":106,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":107,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":108,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":true},{"LineNumber":109,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":110,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":113,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":114,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":115,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":103,"ContinuedLine":true},{"LineNumber":116,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":117,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":120,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":121,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":122,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":125,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":126,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":129,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":130,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":131,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":87,"ContinuedLine":false},{"LineNumber":132,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":133,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":134,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":135,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":149,"Hits":11,"StartColumnNumbers":32,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":152,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":154,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":156,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":157,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":158,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":159,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":160,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":162,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":163,"Hits":5,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":166,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":168,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":170,"Hits":6,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":173,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":176,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":177,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":178,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":182,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":183,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":111,"ContinuedLine":false},{"LineNumber":184,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":185,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":189,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":190,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":191,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":192,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":193,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":194,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":196,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":197,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":102,"ContinuedLine":false},{"LineNumber":199,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":86,"ContinuedLine":false},{"LineNumber":205,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":208,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":209,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":210,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":211,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":212,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":213,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":215,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":218,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":220,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":221,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":223,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":224,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":225,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":226,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":228,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":230,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":232,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":235,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":238,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":109,"ContinuedLine":false},{"LineNumber":239,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":240,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":243,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":244,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":245,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":246,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":247,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":248,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":250,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":251,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":253,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":259,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":262,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":263,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":264,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":265,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":266,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":268,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":274,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":275,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":276,"Hits":5,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":278,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":280,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":281,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":282,"Hits":1,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":284,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":294,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":298,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":300,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":301,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":302,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":303,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":304,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":305,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":306,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":307,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":308,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":309,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":310,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":311,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":312,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":313,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":315,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":317,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":323,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":97,"ContinuedLine":false},{"LineNumber":325,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":326,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":327,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":328,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":331,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":332,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":333,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":90,"ContinuedLine":true},{"LineNumber":334,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":338,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":339,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":91,"ContinuedLine":false},{"LineNumber":340,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":344,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":346,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":348,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":349,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":350,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":360,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":363,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":365,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":373,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":374,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":375,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":376,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":377,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":378,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":379,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":380,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":381,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":382,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":384,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":385,"Hits":0,"StartColumnNumbers":1,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":396,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":399,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":400,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":402,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":403,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":405,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":406,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":39,"ContinuedLine":true},{"LineNumber":407,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":64,"ContinuedLine":true},{"LineNumber":408,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":64,"ContinuedLine":true},{"LineNumber":409,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":51,"ContinuedLine":true},{"LineNumber":410,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":411,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":413,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":414,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":415,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":436,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":440,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":442,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":443,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":445,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":446,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":447,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":448,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":449,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":450,"Hits":1117,"StartColumnNumbers":4,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":452,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":454,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":455,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":456,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":457,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":458,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":459,"Hits":1117,"StartColumnNumbers":4,"EndColumnNumbers":81,"ContinuedLine":true},{"LineNumber":465,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":467,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":468,"Hits":1117,"StartColumnNumbers":2,"EndColumnNumbers":28,"ContinuedLine":true},{"LineNumber":474,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":476,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":477,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":482,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":483,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":485,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":486,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":487,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":488,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":490,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":492,"Hits":3842,"StartColumnNumbers":2,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":496,"Hits":113,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":503,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":504,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":505,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":506,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":508,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":511,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":512,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":513,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":514,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":516,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":520,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":522,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":523,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":525,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":539,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":540,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":541,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":545,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":547,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":548,"Hits":847,"StartColumnNumbers":2,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":549,"Hits":847,"StartColumnNumbers":2,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":552,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":553,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":554,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":555,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":556,"Hits":270,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":true},{"LineNumber":557,"Hits":270,"StartColumnNumbers":2,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":558,"Hits":270,"StartColumnNumbers":2,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":560,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":561,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":562,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":565,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":567,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":568,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":570,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":571,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":78,"ContinuedLine":false},{"LineNumber":572,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":574,"Hits":270,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":587,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":588,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":589,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":591,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":592,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":594,"Hits":6454,"StartColumnNumbers":2,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":596,"Hits":2725,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":597,"Hits":2725,"StartColumnNumbers":14,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":599,"Hits":2725,"StartColumnNumbers":4,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":600,"Hits":2725,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":608,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":609,"Hits":3729,"StartColumnNumbers":16,"EndColumnNumbers":80,"ContinuedLine":true},{"LineNumber":610,"Hits":3729,"StartColumnNumbers":16,"EndColumnNumbers":80,"ContinuedLine":true},{"LineNumber":611,"Hits":3729,"StartColumnNumbers":16,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":612,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":615,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":616,"Hits":3729,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":621,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":623,"Hits":1117,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false}]}}