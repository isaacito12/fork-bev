var sourceData111 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Components\\MotorDriveUnit\\Utility\\MotorDriveUnit_getBlockInfo_Basic.m","RawFileContents":["function info = MotorDriveUnit_getBlockInfo_Basic(fullpathToBlock, nvpairs)\r","%% Collects block parameter values from Motor & Drive block\r","%\r","% OVERVIEW\r","%\r","% This function takes full block path to the Motor & Drive block from\r","% Simscape Driveline, reads block parameters, and returns them in a struct.\r","% First load or open a Simulink model containing the Motor & Drive block,\r","% and pass the full block path of the block to this function.\r","%\r","% Calling this function with no argument uses the currently selected block\r","% in Simulink model file. Open Simulink model, select the Motor & Drive block,\r","% and run this function to collect information.\r","%\r","% ADDITINAL DATA\r","%\r","% In addition to reading parameters from Motor & Drive block,\r","% this function calculates and returns additional data\r","% (mechanical power, copper loss, iron loss, and nominal loss)\r","% at efficiency measurement point.\r","%\r","% By default, data are computed by assuming that\r","% the ratio of iron loss to nominal loss\r","% at efficiency measurement speed is 10 percent.\r","% You can specify the ratio (in percent) by passing a value to this function\r","% and get the corresponding data.\r","%\r","% The absolute value of iron loss can be used as\r","% \"Iron losses at measurement speed\" parameter of\r","% Motor & Drive (System Level) block in Simscape Electrical.\r","\r","% Copyright 2021-2023 The MathWorks, Inc.\r","\r","arguments\r","  fullpathToBlock {mustBeText} = gcb\r","  nvpairs.IronToNominalLossRatio_pct (1,1) double {mustBeNonnegative} = 10;\r","end\r","\r","% ================\r","% Block parameters\r","\r","% Maximum torque\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"torque_max\");\r","maxTorque_Nm = value(sv, \"N*m\");\r","info.MaxTorque_Nm = maxTorque_Nm;\r","\r","% Maximum power\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"power_max\");\r","maxPower_kW = value(sv, \"kW\");\r","info.MaxPower_kW = maxPower_kW;\r","\r","% Torque control time constant, Tc\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"Tc\");\r","info.ResponseTime_s = value(sv, \"s\");\r","\r","% Motor and driver overall efficiency (percent)\r","% No unit is associated to this block parameter.\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"eff\");\r","% Get the value by specifying \"1\" for unit.\r","eff_pct = value(sv, \"1\");\r","info.Efficiency_pct = eff_pct;\r","eff_norm = eff_pct / 100;\r","\r","% Speed at which efficiency is measured\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"w_eff\");\r","spd_meas_rpm = value(sv, \"rpm\");\r","info.Speed_measured_rpm = spd_meas_rpm;\r","spd_meas_radps = spd_meas_rpm*2*pi/60;\r","\r","% Torque at which efficiency is measured\r","sv = getSimscapeValueFromBlockParameter(fullpathToBlock, \"T_eff\");\r","trq_meas_Nm = value(sv, \"N*m\");\r","info.Torque_measured_Nm = trq_meas_Nm;\r","\r","%{\r","% Thermal port\r","info.thermal = getPar(\"thermal_port\");\r","\r","if info.thermal == simscape.enum.thermaleffects.model\r","  sv = sscVal(\"temperature\");\r","  info.Initial_Temperature_K = value(sv, \"K\");\r","end\r","%}\r","\r","% ===============\r","% Additional data\r","\r","% Mechanical power at efficiency measurement point\r","mechpow_eff = spd_meas_radps * trq_meas_Nm;\r","mechpow_meas_kW = mechpow_eff / 1000;\r","info.MechanicalPower_measurement_kW = mechpow_meas_kW;\r","assert( mechpow_meas_kW < maxPower_kW, ...\r","  \"Power at efficiency measurement speed must be smaller than maximum power.\")\r","\r","% Nominal loss (total loss) at efficiency measurement point\r","nominal_loss_meas_W = (1/eff_norm - 1) * mechpow_eff;\r","info.NominalLoss_measured_W = nominal_loss_meas_W;\r","\r","iron_to_nominal_loss_ratio = nvpairs.IronToNominalLossRatio_pct / 100;\r","% Iron losses at measurement speed, Piron\r","iron_loss_meas_W = iron_to_nominal_loss_ratio * nominal_loss_meas_W;\r","info.IronLoss_measured_W = iron_loss_meas_W;\r","\r","% Copper loss at efficiency measurement point\r","copper_loss_meas_W = nominal_loss_meas_W - iron_loss_meas_W;\r","info.CopperLoss_measured_W = copper_loss_meas_W;\r","\r","end  % function\r",""],"CoverageDisplayDataPerLine":{"Function":{"LineNumber":1,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":75,"ContinuedLine":false},"Statement":[{"LineNumber":35,"Hits":[2,1],"StartColumnNumbers":[19,33],"EndColumnNumbers":[29,36],"ContinuedLine":false},{"LineNumber":36,"Hits":[2,2],"StartColumnNumbers":[51,72],"EndColumnNumbers":[68,74],"ContinuedLine":false},{"LineNumber":43,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":44,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":45,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":48,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":49,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":50,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":53,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":54,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":58,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":60,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":61,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":62,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":65,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":66,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":67,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":68,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":71,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":72,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":73,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":89,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":90,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":91,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":92,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":93,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":78,"ContinuedLine":true},{"LineNumber":96,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":97,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":99,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":101,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":102,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":105,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":60,"ContinuedLine":false},{"LineNumber":106,"Hits":2,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false}]}}