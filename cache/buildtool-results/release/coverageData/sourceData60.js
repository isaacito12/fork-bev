var sourceData60 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Components\\BatteryHighVoltage\\buildfile.m","RawFileContents":["function plan = buildfile\r","%% Define tasks for `buildtool` command\r","% Copyright 2023 The MathWorks, Inc.\r","\r","top_folder = currentProject().RootFolder;\r","\r","component_path = fullfile(top_folder, \"Components\", \"BatteryHighVoltage\");\r","\r","test_definitions = [\r","  fullfile(component_path, \"Test\", \"BatteryHV_UnitTest.m\")\r","  fullfile(component_path, \"Test\", \"BatteryHV_UnitTest_MQC.m\")\r","  ];\r","\r","% This `buildfile` function is used by `buildtool` to perform the following tasks.\r","%\r","% - Check code issues.\r","% - Run unit tests.\r","%\r","% To run this function, take the following steps.\r","%\r","% 1. Change the working folder to a folder where this function is stored.\r","%\r","% 2. Run `buildtool` in Command Window.\r","%    `buildtool` searches `buildfile.m` file in the working folder and uses it\r","%    to perform tasks defined in there.\r","%\r","% The test task used in this function is supported by R2023b or newer MATLAB.\r","% For information about `buildtool` and `buildfile.m`, see the documentation.\r","%\r","% - buildtool\r","%   https://mathworks.com/help/matlab/ref/buildtool.html\r","%\r","% - Task for running tests\r","%   https://mathworks.com/help/matlab/ref/matlab.buildtool.tasks.testtask-class.html\r","\r","%% Create a build plan object\r","% A build plan object is required to define tasks.\r","% See the documentation for details.\r","% - https://mathworks.com/help/matlab/ref/buildplan.html\r","\r","plan = buildplan(localfunctions);\r","\r","%% Define a test task\r","% For information about the test task of buildtool, see the documentation.\r","% - https://mathworks.com/help/matlab/ref/matlab.buildtool.tasks.testtask-class.html\r","\r","plan(\"Test\") = matlab.buildtool.tasks.TestTask( ...\r","  SourceFiles = component_path, ...\r","  TestResults = [\"test-results.xml\", \"test-results.pdf\"], ...\r","  CodeCoverageResults = [\"code-coverage.html\", \"code-coverage.xml\"] );\r","\r","plan(\"Test\").Tests = test_definitions;\r","\r","%% Define custom tasks\r","% These tasks are defined as local functions in this file.\r","\r","plan(\"LiveScriptToJupyterNotebook\").Inputs = \"**/*.mlx\";\r","plan(\"LiveScriptToJupyterNotebook\").Outputs = replace(plan(\"LiveScriptToJupyterNotebook\").Inputs, \".mlx\", \".ipynb\");\r","plan(\"LiveScriptToJupyterNotebook\").Dependencies = [\"CodeIssues\" \"Test\"];\r","\r","plan(\"LiveScriptToHTML\").Inputs = \"**/*.mlx\";\r","plan(\"LiveScriptToHTML\").Outputs = replace(plan(\"LiveScriptToHTML\").Inputs, \".mlx\", \".html\");\r","plan(\"LiveScriptToHTML\").Dependencies = [\"CodeIssues\" \"Test\"];\r","\r","%% Add a task to identify code issues\r","% This is a built-in task, available from R2023b.\r","% See the documentation for details.\r","% - https://mathworks.com/help/matlab/ref/matlab.buildtool.tasks.codeissuestask-class.html\r","% You can run this task as follows.\r","%\r","%   buildtool CodeIssues\r","%\r","\r","plan(\"CodeIssues\") = matlab.buildtool.tasks.CodeIssuesTask( ...\r","  Results = \"code-issues.sarif\");\r","\r","%% Add a task for deleting outputs and traces\r","% This is a built-in task, available from R2023b.\r","% To delete the outputs and traces of all other tasks in the build file,\r","% run the \"clean\" task.\r","%\r","%   buildtool clean\r","%\r","% To delete the outputs and traces of certain tasks,\r","% specify the task names as a string vector.\r","% For example, delete the outputs and the trace of a task named \"task1\".\r","%\r","%   buildtool clean(\"task1\")\r","%\r","% Delete the outputs and traces of several tasks.\r","%\r","%   buildtool clean([\"task1\" \"task2\" \"task3\"])\r","%\r","% See the documentation for more details.\r","% - https://mathworks.com/help/matlab/ref/matlab.buildtool.tasks.cleantask-class.html\r","\r","plan(\"Clean\") = matlab.buildtool.tasks.CleanTask;\r","\r","%% Define default tasks\r","% Default tasks are executed when `buildtool` is called without any arguments.\r","\r","plan.DefaultTasks = [\r","  \"CodeIssues\"\r","  \"Test\"\r","  \"LiveScriptToJupyterNotebook\"\r","  ];\r","\r","end  % function\r","\r","\r","%% Custom task functions\r","% Custom task functions can be defined as local functions\r","% in the build file (this file).\r","%\r","% - Function name must end with the word \"Task\", which is case insensitive.\r","%   The build tool generates task names from task function names\r","%   by removing the \"Task\" suffix.\r","%   For example, a task function `testTask` results in a task named \"test\".\r","%\r","% - A task function must accept a TaskContext object as its first input,\r","%   even if the task ignores it.\r","%\r","% - The build tool treats the first help text line,\r","%   often called the H1 line, of the task function as the task description.\r","\r","\r","function LiveScriptToJupyterNotebookTask(context)\r","%% Export Live Scripts to Jupyter notebooks\r","% GitHub web site and VS code render Jupyter notebooks (`*.ipynb` files).\r","% Convert Live Scripts to Jupyter notebooks for viewing convenience.\r","% You can run this task as follows.\r","%\r","%   buildtool LiveScriptToJupyterNotebook\r","%\r","\r","arguments\r","  context (1,1) matlab.buildtool.TaskContext\r","end\r","\r","live_script_files = context.Task.Inputs.paths;\r","jupyter_files = context.Task.Outputs.paths;\r","for idx = 1 : numel(live_script_files)\r","  disp(\"Generating Jupyter notebook from Live Script:\")\r","  disp(\"  \" + live_script_files(idx))\r","\r","  export(live_script_files(idx), jupyter_files(idx), Run=true);\r","\r","end  % for\r","end  % function\r","\r","\r","function LiveScriptToHTMLTask(context)\r","%% Export Live Scripts to HTML\r","% You can run this task as follows.\r","%\r","%   buildtool LiveScriptToHTML\r","%\r","\r","arguments\r","  context (1,1) matlab.buildtool.TaskContext\r","end\r","\r","live_script_files = context.Task.Inputs.paths;\r","docFiles = context.Task.Outputs.paths;\r","for idx = 1 : numel(live_script_files)\r","  disp(\"Generating HTML from Live Script:\")\r","  disp(\"  \" + live_script_files(idx))\r","\r","  export(live_script_files(idx), docFiles(idx), Run=true);\r","\r","end  % for\r","end  % function\r",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":1,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":152,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false}],"Statement":[{"LineNumber":5,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":7,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":74,"ContinuedLine":false},{"LineNumber":9,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":10,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":58,"ContinuedLine":true},{"LineNumber":11,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":62,"ContinuedLine":true},{"LineNumber":12,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":4,"ContinuedLine":true},{"LineNumber":41,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":47,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":48,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":49,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":true},{"LineNumber":50,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":70,"ContinuedLine":true},{"LineNumber":52,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":57,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":58,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":116,"ContinuedLine":false},{"LineNumber":59,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":61,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":62,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":93,"ContinuedLine":false},{"LineNumber":63,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":74,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":75,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":33,"ContinuedLine":true},{"LineNumber":97,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":102,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":103,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":14,"ContinuedLine":true},{"LineNumber":104,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":8,"ContinuedLine":true},{"LineNumber":105,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":31,"ContinuedLine":true},{"LineNumber":106,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":4,"ContinuedLine":true},{"LineNumber":140,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":141,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":142,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":143,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":144,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":146,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":163,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":164,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":165,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":166,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":167,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":169,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":58,"ContinuedLine":false}]}}