var sourceData185 = {"FileName":"C:\\local\\github-issacito12\\fork-bev\\Utility\\SignalDesigner\\SignalDesigner.m","RawFileContents":["classdef SignalDesigner < handle\r","%% Signal Designer class implementation\r","\r","% Copyright 2022 The MathWorks, Inc.\r","\r","properties\r","  % Signal specifications\r","\r","  Type {mustBeMember(Type, [\"PieceWiseConstant\", \"ContinuousMultiStep\", \"Continuous\"])} = \"PieceWiseConstant\"\r","\r","  Title {mustBeTextScalar} = \"\"\r","  Description {mustBeTextScalar} = \"\"\r","\r","  XName {mustBeTextScalar} = \"X\"\r","  XVarName {mustBeTextScalar} = \"X\"\r","  XUnit {mustBeTextScalar} = \"1\"\r","\r","  YName {mustBeTextScalar} = \"Y\"\r","  YVarName {mustBeTextScalar} = \"Y\"\r","  YUnit {mustBeTextScalar} = \"1\"\r","\r","  XYData double\r","\r","  % For continuous data\r","  DeltaX (1,1) double {mustBePositive} = 0.1\r","\r","  % Properties for saving signal spec\r","  SpecFilename {mustBeTextScalar} = \"\"\r","  XSaveFormat {mustBeTextScalar} = \"%0.2f\"\r","  YSaveFormat {mustBeTextScalar} = \"%0.4f\"\r","\r","  % ----- Internally generated properties -----\r","\r","  TransformedData table\r","  Data table\r","\r","  % For continous data\r","  XRefined (:,1) double\r","  YRefined (:,1) double\r","  InterpolatedData table\r","\r","end  % properties\r","\r","methods\r","%%\r","\r","\r","function sigObj = SignalDesigner(SignalType)\r","%%\r","\r","arguments\r","  SignalType {mustBeMember(SignalType, [\"PieceWiseConstant\", \"ContinuousMultiStep\", \"Continuous\"])} = \"PieceWiseConstant\"\r","end\r","\r","sigObj.Type = SignalType;\r","\r","if sigObj.Type == \"PieceWiseConstant\" || sigObj.Type == \"Continuous\"\r","  sigObj.XYData = [ 0 0 ; 1 0 ];\r","else  % ContinuousMultiStep\r","  sigObj.XYData = [ 0 1 0 ];\r","end\r","\r","update(sigObj);\r","\r","end  % function\r","\r","\r","function update(sigObj)\r","%%\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","end\r","\r","switch sigObj.Type\r","\r","case \"ContinuousMultiStep\"\r","\r","  sigObj.TransformedData = transformDataPoints(sigObj, sigObj.XYData);\r","  sigObj.InterpolatedData = interpolateDataPoints(sigObj, sigObj.TransformedData);\r","  sigObj.Data = eliminateRedundantDataPoints(sigObj, sigObj.InterpolatedData);\r","\r","case \"PieceWiseConstant\"\r","\r","  % Check X data points\r","  xPoints = sigObj.XYData(:, 1);\r","  assert( issorted(xPoints, \"strictascend\"), ...\r","    \"X must be strictly asending.\")\r","\r","  % Check Y data points\r","  yPoints = sigObj.XYData(:, 2);\r","  assert( all(not(isnan(yPoints))), ...\r","    \"Y data cannot have NaN.\")\r","\r","  % Build data\r","  newData = table(xPoints, yPoints);\r","  newData.Properties.VariableNames = [sigObj.XVarName, sigObj.YVarName];\r","  newData.Properties.VariableUnits = [sigObj.XUnit, sigObj.YUnit];\r","  sigObj.Data = newData;\r","\r","case \"Continuous\"\r","\r","  dx = sigObj.DeltaX;\r","\r","  % Check X data points\r","  xPoints = sigObj.XYData(:, 1);\r","  assert( numel(xPoints) >= 2 , ...\r","    \"Only one row is defined, but Continuous signal type requires at least 2 rows.\")\r","  assert( issorted(xPoints, \"strictascend\"), ...\r","    \"X must be strictly asending.\")\r","\r","  % Check that delta x makes sense for interpolation.\r","  min_diff_x = min(diff(xPoints));\r","  assert(dx <= min_diff_x/2, ...\r","    \"Interpolation step size dx must be smaller than or equal to the half of mininum value of diff(X).\" ...\r","    + newline + \"dx/2 = \" + dx + \" \" ...\r","    + newline + \"min(diff(x)) = \" + min_diff_x/2 )\r","\r","  % Check Y data points\r","  yPoints = sigObj.XYData(:, 2);\r","  assert( all(not(isnan(yPoints))), ...\r","    \"Y data cannot have NaN.\")\r","\r","  % Build data\r","  x_refined = transpose(xPoints(1) : dx : xPoints(end));\r","  if abs(x_refined(end) - xPoints(end)) > 10*eps\r","    x_refined(end + 1) = xPoints(end);\r","  end\r","  y_refined = interp1(xPoints, yPoints, x_refined, \"makima\");\r","  sigObj.InterpolatedData = table(x_refined, y_refined);\r","  sigObj.InterpolatedData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];\r","  sigObj.InterpolatedData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];\r","  sigObj.Data = sigObj.InterpolatedData;\r","  sigObj.XRefined = x_refined;\r","  sigObj.YRefined = y_refined;\r","\r","end  % switch\r","\r","end  % function\r","\r","\r","function fig = plotDataPoints(sigObj, nvpairs)\r","%% Plots generated data points.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","\r","  % Debug=true shows intermediate points\r","  nvpairs.Debug (1,1) logical = false\r","end\r","\r","update(sigObj);\r","\r","plotMoreForDebug = nvpairs.Debug;\r","\r","fig = figure;\r","fig.Position(3:4) = [800 400];\r","hold on\r","grid on\r","axis padded\r","\r","if sigObj.Title ~= \"\"\r","  title(sigObj.Title)\r","end\r","\r","switch sigObj.Type\r","\r","case \"ContinuousMultiStep\"\r","\r","  if plotMoreForDebug\r","\r","    % Generated trace\r","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=1);\r","\r","    % Final data points ... interpolated, no redundancy in data points\r","    sc = scatter(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), 36*3);\r","    sc.Marker = \"+\";\r","    sc.LineWidth = 1.5;\r","\r","    % Interpolated points\r","    % There may not exist interpolated data points.\r","    if height(sigObj.InterpolatedData) >= 1\r","      sc = scatter(sigObj.InterpolatedData.(sigObj.XVarName), sigObj.InterpolatedData.(sigObj.YVarName), 36*2);\r","      sc.Marker = \"x\";\r","      sc.LineWidth = 2;\r","    end\r","\r","    % User data\r","    lix = sigObj.TransformedData.Added == false;  % logical index\r","    xTmp = sigObj.TransformedData.X;\r","    yTmp = sigObj.TransformedData.Y;\r","    sc = scatter(xTmp(lix), yTmp(lix), 36*4);\r","    sc.Marker = \"o\";\r","    sc.LineWidth = 2;\r","\r","    if height(sigObj.InterpolatedData) >= 1\r","      legend([\"Generated trace\", \"Final data points\", \"Interpolated\", \"Data points\"], Location=\"best\")\r","    else\r","      legend([\"Generated trace\", \"Final data points\", \"Data points\"], Location=\"best\")\r","    end\r","\r","  else  % not debug\r","\r","    % Interpolated points without redundancy\r","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=2);\r","\r","    % User data\r","    lix = sigObj.TransformedData.Added == false;  % logical index\r","    xTmp = sigObj.TransformedData.X;\r","    yTmp = sigObj.TransformedData.Y;\r","    sc = scatter(xTmp(lix), yTmp(lix), 36*1.5);\r","    sc.Marker = \"o\";\r","    sc.LineWidth = 2;\r","\r","    legend([\"Generated trace\", \"Data points\"], Location=\"best\")\r","  end  % if\r","\r","case \"PieceWiseConstant\"\r","\r","  st = stairs(sigObj.Data, sigObj.XVarName, sigObj.YVarName);\r","  st.LineWidth = 2;\r","\r","  sc = scatter(sigObj.Data, sigObj.XVarName, sigObj.YVarName);\r","  sc.Marker = \"o\";\r","  sc.SizeData = 36*2;\r","  sc.LineWidth = 2;\r","\r","  legend([\"Generated trace\", \"Data points\"], Location=\"best\")\r","\r","case \"Continuous\"\r","\r","  if plotMoreForDebug\r","\r","    % Generated trace\r","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=1);\r","\r","    % Interpolated points\r","    sc = scatter(sigObj.InterpolatedData.(sigObj.XVarName), sigObj.InterpolatedData.(sigObj.YVarName), 36*2);\r","    sc.Marker = \"x\";\r","    sc.LineWidth = 2;\r","\r","    % User data\r","    xPoints = sigObj.XYData(:, 1);\r","    yPoints = sigObj.XYData(:, 2);\r","    sc = scatter(xPoints, yPoints, 36*1.5);\r","    sc.Marker = \"o\";\r","    sc.SizeData = 36*2;\r","    sc.LineWidth = 2;\r","\r","    if height(sigObj.InterpolatedData) >= 1\r","      legend([\"Generated trace\", \"Interpolated\", \"Data points\"], Location=\"best\")\r","    else\r","      legend([\"Generated trace\", \"Data points\"], Location=\"best\")\r","    end\r","\r","  else  % not debug\r","\r","    % Generated trace\r","    plot(sigObj.Data.(sigObj.XVarName), sigObj.Data.(sigObj.YVarName), LineWidth=2);\r","\r","    % User data\r","    xPoints = sigObj.XYData(:, 1);\r","    yPoints = sigObj.XYData(:, 2);\r","    sc = scatter(xPoints, yPoints, 36*1.5);\r","    sc.Marker = \"o\";\r","    sc.LineWidth = 2;\r","\r","    legend([\"Generated trace\", \"Data points\"], Location=\"best\")\r","  end  % if\r","\r","\r","end  % switch\r","\r","xLabelStr = sigObj.XName;\r","if sigObj.Data.Properties.VariableUnits(1) ~= \"1\"\r","  xLabelStr = xLabelStr + \" (\" + sigObj.Data.Properties.VariableUnits(1) + \")\";\r","end\r","xlabel(xLabelStr)\r","\r","yLabelStr = sigObj.YName;\r","if sigObj.Data.Properties.VariableUnits(2) ~= \"1\"\r","  yLabelStr = yLabelStr + \" (\" + sigObj.Data.Properties.VariableUnits(2) + \")\";\r","end\r","ylabel(yLabelStr)\r","\r","end  % function\r","\r","\r","function saveSpec(sigObj, SpecFilename)\r","%% Saves signal specification to JSON file.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","  SpecFilename {mustBeTextScalar}\r","end\r","\r","% SpecFilename is saved to sigObj. saveData function uses it.\r","sigObj.SpecFilename = SpecFilename;\r","\r","signalSpec = [];\r","signalSpec.Type = sigObj.Type;\r","signalSpec.Title = sigObj.Title;\r","signalSpec.Description = sigObj.Description;\r","signalSpec.XName = sigObj.XName;\r","signalSpec.XVarName = sigObj.XVarName;\r","signalSpec.XUnit = sigObj.XUnit;\r","signalSpec.YName = sigObj.YName;\r","signalSpec.YVarName = sigObj.YVarName;\r","signalSpec.YUnit = sigObj.YUnit;\r","signalSpec.XSaveFormat = sigObj.XSaveFormat;\r","signalSpec.YSaveFormat = sigObj.YSaveFormat;\r","if sigObj.Type == \"ContinuousMultiStep\" || sigObj.Type == \"Continuous\"\r","  signalSpec.DeltaX = sigObj.DeltaX;\r","end\r","signalSpec.XYData = sigObj.XYData;\r","\r","jsonStr = string(jsonencode(signalSpec, PrettyPrint=true));\r","\r","% The above jsonStr can be saved to file, but\r","% each element of a row is placed in separate lines\r","% with many unnecessary white spaces due to the PrettyPrint=true option.\r","% The code below combine those lines to a more compact yet readable style.\r","jsonStrFirstPart = extractBefore(jsonStr, newline + whitespacePattern + \"[\" + newline) + newline;\r","\r","if sigObj.Type == \"PieceWiseConstant\" || sigObj.Type == \"Continuous\"\r","  ptn = whitespacePattern + \"[\" + newline ...\r","    + whitespacePattern + digitsPattern + \",\" + newline ... x\r","    + whitespacePattern + digitsPattern + newline;   % y\r","\r","else  % ContinuousMultiStep\r","  ptn = whitespacePattern + \"[\" + newline ...\r","    + whitespacePattern + digitsPattern + \",\" + newline ... x1\r","    + whitespacePattern + (digitsPattern | caseInsensitivePattern(\"null\")) + \",\" + newline ... x2\r","    + whitespacePattern + digitsPattern + newline;  % y\r","\r","end  % if\r","\r","jsonStrDataPoints = extract(jsonStr, ptn);\r","jsonStrDataPoints = erase(jsonStrDataPoints, [newline whitespacePattern]) + \"],\" + newline;\r","jsonStrDataPoints(end) = replace(jsonStrDataPoints(end), \"],\", \"]\");\r","\r","% join uses a white space as a default delmiter, which\r","% we don't need, thus specifying \"\" in the second argument.\r","jsonStrDataPoints = join(jsonStrDataPoints, \"\");\r","\r","jsonStr = jsonStrFirstPart + jsonStrDataPoints + \"]}\";\r","\r","fid = fopen(SpecFilename, \"w\");\r","fprintf(fid, \"%s\", jsonStr);\r","fclose(fid);\r","\r","end  % function\r","\r","\r","function specStruct = loadSpec(sigObj, SpecFilename)\r","%% Reads signal spec file and updates signal object.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","  SpecFilename {mustBeTextScalar}\r","end\r","\r","jsonStr = fileread(SpecFilename);\r","\r","specStruct = jsondecode(jsonStr);\r","\r","% JSON supports fewer data types than MATLAB.\r","% For example, string in MATLAB is saved as charactor vector in JSON\r","% because there is no string type in JSON.\r","% thus jsondecode returns charactor vector for texts.\r","% You must convert them to string explicitly if necessary.\r","\r","sigObj.Type = string(specStruct.Type);\r","sigObj.Title = string(specStruct.Title);\r","sigObj.Description = string(specStruct.Description);\r","sigObj.XName = string(specStruct.XName);\r","sigObj.XVarName = string(specStruct.XVarName);\r","sigObj.XUnit = string(specStruct.XUnit);\r","sigObj.YName = string(specStruct.YName);\r","sigObj.YVarName = string(specStruct.YVarName);\r","sigObj.YUnit = string(specStruct.YUnit);\r","sigObj.SpecFilename = string(SpecFilename);\r","\r","if sigObj.Type == \"ContinuousMultiStep\" || sigObj.Type == \"Continuous\"\r"," sigObj.DeltaX = specStruct.DeltaX;\r","end\r","\r","end  % function\r","\r","\r","function saveData(sigObj, DataFilename)\r","%% Saves generated signal data to M file.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","  DataFilename {mustBeTextScalar}\r","end\r","\r","xDataStr = sprintf(sigObj.XSaveFormat + \" \", sigObj.Data.(sigObj.XVarName));\r","xDataStr = \"[ \" + xDataStr + \"]\";\r","\r","yDataStr = sprintf(sigObj.YSaveFormat + \" \", sigObj.Data.(sigObj.YVarName));\r","yDataStr = \"[ \" + yDataStr + \"]\";\r","\r","dataStr = ...\r","  \"% \" + sigObj.Description + newline + ...\r","  \"% X: \" + sigObj.XName + \" (\" + sigObj.XUnit + \")\" + newline + ...\r","  \"% Y: \" + sigObj.YName + \" (\" + sigObj.YUnit + \")\" + newline + ...\r","  \"% Spec file: \" + sigObj.SpecFilename + newline + ...\r","  sigObj.XVarName + \" = \" + xDataStr + \";\" + newline + ...\r","  sigObj.YVarName + \" = \" + yDataStr + \";\" + newline;\r","\r","fid = fopen(DataFilename, \"w\");\r","fprintf(fid, \"%s\", dataStr);\r","fclose(fid);\r","\r","end  % function\r","\r","\r","function result = transformDataPoints(~, xyData)\r","%% Transforms compact xy-data points to a format suitable for processing\r","% Converts a row in [x1 x2 y] format into [x1 y; x2 y] format.\r","% Optionally adds mid-points for smoothing.\r","% Works with continuous and timedcontinuous cases.\r","\r","arguments\r","  ~\r","\r","  % N-by-3 matrix. Each row is [x1 x2 y].\r","  % x1 is X start data point.\r","  % x2 is X end data point, which can be nan.\r","  % y is Y data point.\r","  xyData (:,3) double\r","end\r","\r","numInputRows = height(xyData);\r","\r","% Check X data points\r","\r","xPoints = xyData(:, [1 2]);\r","\r","assert(issorted(xPoints(:,1), \"strictascend\"), ...\r","  \"X start vector must be strictly asending.\")\r","\r","tmpVec = xPoints(:,2);\r","lix = not(isnan(tmpVec));  % logical index\r","if any(lix)\r","  tmpVec = tmpVec(lix);\r","  assert(issorted(tmpVec, \"strictascend\"), ...\r","    \"X end vector must be strictly asending.\")\r","\r","  dx = xPoints(:,2) - xPoints(:,1);\r","\r","  cond_dx_is_nan = isnan(dx);\r","  cond_dx_is_pos = dx > 0;\r","  violating = not(cond_dx_is_nan | cond_dx_is_pos);\r","  lix = find(violating);  % logical index\r","  assert(isempty(lix), ...\r","    \"X start is after X end, which is invalid, at these rows: \" + num2str(lix'));\r","\r","end  % if\r","\r","% Check Y data points\r","\r","yPoints = xyData(:, 3);\r","\r","assert(all( not(isnan( yPoints )) ), ...\r","  \"Y data cannot have NaN.\")\r","\r","% Build data\r","\r","% If transformedData.Refine(i) is true,\r","% apply interpolation to the data between i and i+1.\r","transformedData = struct('X', [], 'Y',[], 'Added',[], 'Refine',[]);\r","\r","idx = 1;\r","for r = 1 : numInputRows\r","\r","  % xp(1) is X start point. Must exist.\r","  % xp(2) is X end point. May not exist.\r","  % yp is Y data point. Must exist.\r","  xp = xPoints(r, :);\r","  yp = yPoints(r);\r","\r","  transformedData(idx).X = xp(1);\r","  transformedData(idx).Y = yp;\r","  transformedData(idx).Added = false;\r","  transformedData(idx).Refine = false;\r","\r","  idx = idx + 1;\r","\r","  if isnan(xp(2))\r","    % X end point, xp(2), is not defined.\r","    % This point is used for interpolation.\r","\r","    transformedData(idx-1).Refine = true;\r","\r","  else\r","    % X end point, xp(2), is defined.\r","    % This point is part of flat segment and not used for interpolation.\r","\r","    % Add mid-point.\r","    transformedData(idx).Added = true;\r","    transformedData(idx).X = (xp(1) + xp(2)) / 2;\r","    transformedData(idx).Y = yp;\r","    transformedData(idx).Refine = false;\r","\r","    idx = idx + 1;\r","\r","    % Add end point.\r","    transformedData(idx).Added = false;\r","    transformedData(idx).X = xp(2);\r","    transformedData(idx).Y = yp;\r","    transformedData(idx).Refine = true;\r","\r","    idx = idx + 1;\r","\r","  end  % if\r","end  % for\r","transformedData(end).Refine = false;\r","\r","dx = diff([transformedData.X]);\r","assert(all(dx > 0), \"X data points are not strictly ascending.\")\r","\r","result = struct2table(transformedData);\r","\r","end  % function\r","\r","\r","function result = interpolateDataPoints(sigObj, transformedData)\r","%% Interpolates data points.\r","% This takes transformed data points, not a user-specified matrix.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","  transformedData (:,4)\r","end\r","\r","x_1 = transformedData.X(1);\r","x_end = transformedData.X(end);\r","x_delta = sigObj.DeltaX;\r","\r","% Check that delta x makes sense for interpolation.\r","% This check must be made in interpolating segments only.\r","indices = find(transformedData.Refine == true);\r","\r","if isempty(indices)\r","  result = table(Size=[0, 2], VariableTypes=[\"double\", \"double\"]);\r","  return  % <======================================================= RETURN\r","end\r","\r","nextElementIndices = indices + 1;\r","xPoints = transformedData.X;\r","dx = xPoints(nextElementIndices) - xPoints(indices);\r","assert(x_delta <= min(dx)/2, ...\r","  \"Delta X must be smaller than the half of min(dx) in interpolating segments.\" ...\r","  + newline + \"Delta X = \" + x_delta + \" \" ...\r","  + newline + \"min(dx)/2 = \" + min(dx)/2 )\r","\r","x_refined = transpose(x_1 : x_delta : x_end);\r","if abs(x_refined(end) - x_end) > 10*eps\r","  x_refined(end + 1) = x_end;\r","end\r","\r","y_refined = interp1(transformedData.X, transformedData.Y, x_refined, \"makima\");\r","\r","sigObj.XRefined = x_refined;\r","sigObj.YRefined = y_refined;\r","\r","interpolatedData = table(x_refined, y_refined);\r","interpolatedData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];\r","interpolatedData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];\r","\r","result = interpolatedData;\r","\r","end  % function\r","\r","\r","function result = eliminateRedundantDataPoints(sigObj, interpolatedData)\r","%% Eliminates redundant data points generated by interpolation.\r","\r","arguments\r","  sigObj (1,1) SignalDesigner\r","  interpolatedData (:,2) table\r","end\r","\r","newData = table(Size=[0, 2], VariableTypes=[\"double\", \"double\"]);\r","newData.Properties.VariableNames = [sigObj.XVarName sigObj.YVarName];\r","newData.Properties.VariableUnits = [sigObj.XUnit sigObj.YUnit];\r","\r","idx = 1;\r","while idx < height(sigObj.TransformedData)\r","\r","  if sigObj.TransformedData.Refine(idx) == true\r","    % Use interpolated points.\r","    xRange = (sigObj.TransformedData.X(idx) <= sigObj.XRefined) ...\r","              & (sigObj.XRefined <= sigObj.TransformedData.X(idx+1));\r","    % Avoid duplicating the same row.\r","    newData = [newData(1:end-1, :); interpolatedData(xRange, :)];\r","    idx = idx + 1;\r","\r","  else\r","    % Interpolated points contain redundant points in flat segments.\r","    % Avoid including those redundant points.\r","\r","    % We must skip the internally added mid-point.\r","    % Thus, idx+2 rather than idx+1 is used.\r","    tmpData = table( ...\r","                [sigObj.TransformedData.X(idx); sigObj.TransformedData.X(idx+2)], ...\r","                [sigObj.TransformedData.Y(idx); sigObj.TransformedData.Y(idx+2)], ...\r","                VariableNames = [sigObj.XVarName, sigObj.YVarName] );\r","    tmpData.Properties.VariableUnits = [sigObj.XUnit, sigObj.YUnit];\r","\r","    % Avoid duplicating the same row.\r","    newData = [newData(1:end-1, :); tmpData];\r","    idx = idx + 2;\r","\r","  end\r","end\r","\r","assert(issorted(newData.(sigObj.XVarName), \"strictascend\"))\r","\r","result = newData;\r","\r","end  % function\r","\r","end  % methods\r","\r","end  % classdef\r",""],"CoverageDisplayDataPerLine":{"Function":[{"LineNumber":48,"Hits":820,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":68,"Hits":1832,"StartColumnNumbers":0,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":142,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":289,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":355,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":391,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":420,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":530,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":579,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false}],"Statement":[{"LineNumber":52,"Hits":[820,1],"StartColumnNumbers":[14,102],"EndColumnNumbers":[98,121],"ContinuedLine":false},{"LineNumber":55,"Hits":820,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":57,"Hits":820,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":58,"Hits":144,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":60,"Hits":676,"StartColumnNumbers":2,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":63,"Hits":820,"StartColumnNumbers":0,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":75,"Hits":1832,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":77,"Hits":1832,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":79,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":80,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":82,"ContinuedLine":false},{"LineNumber":81,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":78,"ContinuedLine":false},{"LineNumber":83,"Hits":473,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":86,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":87,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":88,"Hits":103,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":91,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":92,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":93,"Hits":103,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":96,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":97,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":98,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":99,"Hits":103,"StartColumnNumbers":2,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":101,"Hits":370,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":103,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":106,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":107,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":108,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":true},{"LineNumber":109,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":110,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":true},{"LineNumber":113,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":114,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":115,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":103,"ContinuedLine":true},{"LineNumber":116,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":true},{"LineNumber":117,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":120,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":121,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":122,"Hits":370,"StartColumnNumbers":4,"EndColumnNumbers":30,"ContinuedLine":true},{"LineNumber":125,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":126,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":127,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":129,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":130,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":131,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":87,"ContinuedLine":false},{"LineNumber":132,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":133,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":134,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":135,"Hits":370,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":149,"Hits":11,"StartColumnNumbers":32,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":152,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":15,"ContinuedLine":false},{"LineNumber":154,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":156,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":157,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":158,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":159,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":160,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":13,"ContinuedLine":false},{"LineNumber":162,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":163,"Hits":5,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":166,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":168,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":170,"Hits":6,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":173,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":176,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":85,"ContinuedLine":false},{"LineNumber":177,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":178,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":182,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":183,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":111,"ContinuedLine":false},{"LineNumber":184,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":185,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":189,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":190,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":191,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":192,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":193,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":194,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":196,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":197,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":102,"ContinuedLine":false},{"LineNumber":199,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":86,"ContinuedLine":false},{"LineNumber":205,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":208,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":209,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":210,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":211,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":212,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":213,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":215,"Hits":6,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":218,"Hits":5,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":220,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":221,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":223,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":62,"ContinuedLine":false},{"LineNumber":224,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":225,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":226,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":228,"Hits":2,"StartColumnNumbers":2,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":230,"Hits":3,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":232,"Hits":3,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":235,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":238,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":109,"ContinuedLine":false},{"LineNumber":239,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":240,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":243,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":244,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":245,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":246,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":247,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":248,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":250,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":251,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":253,"Hits":0,"StartColumnNumbers":6,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":259,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":84,"ContinuedLine":false},{"LineNumber":262,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":263,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":264,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":265,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":266,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":268,"Hits":3,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":274,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":275,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":276,"Hits":5,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":278,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":280,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":281,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":282,"Hits":1,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":284,"Hits":11,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":294,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":298,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":300,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":301,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":302,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":303,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":304,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":305,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":306,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":307,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":308,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":309,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":310,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":311,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":312,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":313,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":315,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":317,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":323,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":97,"ContinuedLine":false},{"LineNumber":325,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":326,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":327,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":328,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":331,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":332,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":55,"ContinuedLine":true},{"LineNumber":333,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":90,"ContinuedLine":true},{"LineNumber":334,"Hits":0,"StartColumnNumbers":4,"EndColumnNumbers":50,"ContinuedLine":true},{"LineNumber":338,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":339,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":91,"ContinuedLine":false},{"LineNumber":340,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":344,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":48,"ContinuedLine":false},{"LineNumber":346,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":348,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":349,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":350,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":360,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":363,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":365,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":373,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":374,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":375,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":376,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":377,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":378,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":379,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":380,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":381,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":382,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":384,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":385,"Hits":0,"StartColumnNumbers":1,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":396,"Hits":0,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":399,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":400,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":402,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":76,"ContinuedLine":false},{"LineNumber":403,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":405,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":9,"ContinuedLine":false},{"LineNumber":406,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":39,"ContinuedLine":true},{"LineNumber":407,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":64,"ContinuedLine":true},{"LineNumber":408,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":64,"ContinuedLine":true},{"LineNumber":409,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":51,"ContinuedLine":true},{"LineNumber":410,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":54,"ContinuedLine":true},{"LineNumber":411,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":53,"ContinuedLine":true},{"LineNumber":413,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":414,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":415,"Hits":0,"StartColumnNumbers":0,"EndColumnNumbers":12,"ContinuedLine":false},{"LineNumber":436,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":440,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":442,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":443,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":445,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":446,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":25,"ContinuedLine":false},{"LineNumber":447,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":11,"ContinuedLine":false},{"LineNumber":448,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":449,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":450,"Hits":1359,"StartColumnNumbers":4,"EndColumnNumbers":46,"ContinuedLine":true},{"LineNumber":452,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":454,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":455,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":456,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":51,"ContinuedLine":false},{"LineNumber":457,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":458,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":459,"Hits":1359,"StartColumnNumbers":4,"EndColumnNumbers":81,"ContinuedLine":true},{"LineNumber":465,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":467,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":468,"Hits":1359,"StartColumnNumbers":2,"EndColumnNumbers":28,"ContinuedLine":true},{"LineNumber":474,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":476,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":477,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":482,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":21,"ContinuedLine":false},{"LineNumber":483,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":485,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":486,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":487,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":37,"ContinuedLine":false},{"LineNumber":488,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":490,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":16,"ContinuedLine":false},{"LineNumber":492,"Hits":4654,"StartColumnNumbers":2,"EndColumnNumbers":17,"ContinuedLine":false},{"LineNumber":496,"Hits":113,"StartColumnNumbers":4,"EndColumnNumbers":41,"ContinuedLine":false},{"LineNumber":503,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":504,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":505,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":506,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":508,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":511,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":512,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":513,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":514,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":516,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":520,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":36,"ContinuedLine":false},{"LineNumber":522,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":523,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":64,"ContinuedLine":false},{"LineNumber":525,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":539,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":540,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":541,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":24,"ContinuedLine":false},{"LineNumber":545,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":547,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":19,"ContinuedLine":false},{"LineNumber":548,"Hits":1033,"StartColumnNumbers":2,"EndColumnNumbers":66,"ContinuedLine":false},{"LineNumber":549,"Hits":1033,"StartColumnNumbers":2,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":552,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":553,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":554,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":52,"ContinuedLine":false},{"LineNumber":555,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":556,"Hits":326,"StartColumnNumbers":2,"EndColumnNumbers":79,"ContinuedLine":true},{"LineNumber":557,"Hits":326,"StartColumnNumbers":2,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":558,"Hits":326,"StartColumnNumbers":2,"EndColumnNumbers":42,"ContinuedLine":true},{"LineNumber":560,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":561,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":562,"Hits":0,"StartColumnNumbers":2,"EndColumnNumbers":29,"ContinuedLine":false},{"LineNumber":565,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":79,"ContinuedLine":false},{"LineNumber":567,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":568,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":28,"ContinuedLine":false},{"LineNumber":570,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":571,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":78,"ContinuedLine":false},{"LineNumber":572,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":72,"ContinuedLine":false},{"LineNumber":574,"Hits":326,"StartColumnNumbers":0,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":587,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":588,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":69,"ContinuedLine":false},{"LineNumber":589,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":591,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":8,"ContinuedLine":false},{"LineNumber":592,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":42,"ContinuedLine":false},{"LineNumber":594,"Hits":7836,"StartColumnNumbers":2,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":596,"Hits":3295,"StartColumnNumbers":4,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":597,"Hits":3295,"StartColumnNumbers":14,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":599,"Hits":3295,"StartColumnNumbers":4,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":600,"Hits":3295,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":608,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":20,"ContinuedLine":false},{"LineNumber":609,"Hits":4541,"StartColumnNumbers":16,"EndColumnNumbers":80,"ContinuedLine":true},{"LineNumber":610,"Hits":4541,"StartColumnNumbers":16,"EndColumnNumbers":80,"ContinuedLine":true},{"LineNumber":611,"Hits":4541,"StartColumnNumbers":16,"EndColumnNumbers":69,"ContinuedLine":true},{"LineNumber":612,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":615,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":45,"ContinuedLine":false},{"LineNumber":616,"Hits":4541,"StartColumnNumbers":4,"EndColumnNumbers":18,"ContinuedLine":false},{"LineNumber":621,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":59,"ContinuedLine":false},{"LineNumber":623,"Hits":1359,"StartColumnNumbers":0,"EndColumnNumbers":17,"ContinuedLine":false}]}}